/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_PlayerJet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/PlayerJet */ \"./src/scripts/PlayerJet.js\");\n/* harmony import */ var _scripts_EnemyJet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/EnemyJet */ \"./src/scripts/EnemyJet.js\");\n\n\nlet gameStarted = false;\nfunction startGame() {\n  const app = new PIXI.Application({\n    width: 800,\n    height: 600,\n    backgroundColor: 0x1099bb\n  });\n  //////////////////////////////create gameboard//////////////////////////////////\n  document.getElementById(\"main\").appendChild(app.view);\n  async function setup() {\n    const bgTextures = [await PIXI.Assets.load(\"./src/assets/bg1.png\"), await PIXI.Assets.load(\"./src/assets/bg2.png\"), await PIXI.Assets.load(\"./src/assets/bg3.png\")];\n    const baseBackground = new PIXI.Sprite(bgTextures[0]);\n    app.stage.addChild(baseBackground);\n    const changingBackgrounds = [new PIXI.Sprite(bgTextures[1]), new PIXI.Sprite(bgTextures[2])];\n    changingBackgrounds.forEach((bg, index) => {\n      bg.alpha = index === 0 ? 1 : 0;\n      app.stage.addChild(bg);\n    });\n    let fadeIn = true;\n    let currentBgIndex = 0;\n    let nextBgIndex = 1;\n    app.ticker.add(() => {\n      if (fadeIn) {\n        changingBackgrounds[nextBgIndex].alpha += 0.005;\n        if (changingBackgrounds[nextBgIndex].alpha >= 1) {\n          fadeIn = false;\n          currentBgIndex = (currentBgIndex + 1) % changingBackgrounds.length;\n          nextBgIndex = (currentBgIndex + 1) % changingBackgrounds.length;\n        }\n      } else {\n        changingBackgrounds[currentBgIndex].alpha -= 0.005;\n        if (changingBackgrounds[currentBgIndex].alpha <= 0) {\n          fadeIn = true;\n        }\n      }\n    });\n  }\n  setup();\n  ///////////////fading background///////////////////////\n  const playerTexture = PIXI.Texture.from(\"./src/assets/playerjet.png\");\n  const playerBullets = [];\n  const enemyBullets = [];\n  const score = {\n    enemyKillCount: 0\n  };\n  let player = new _scripts_PlayerJet__WEBPACK_IMPORTED_MODULE_0__[\"default\"](app, app.view.width / 2, app.view.height - 50, playerTexture, playerBullets, score, 3);\n  const keys = {};\n  let isPaused = false;\n  document.addEventListener(\"keydown\", e => {\n    if (e.key === \"P\" || e.key === \"p\") {\n      if (isPaused) {\n        app.ticker.start();\n      } else {\n        app.ticker.stop();\n      }\n      isPaused = !isPaused;\n    } else {\n      keys[e.key] = true;\n    }\n  });\n  document.addEventListener(\"keyup\", e => {\n    keys[e.key] = false;\n  });\n\n  ////////////////////////////to set the player can hold on to key to keep moving on the direction/////////////\n  app.ticker.add(() => {\n    if (!player.destroyed) {\n      player.handleKeyboard(keys);\n      app.stage.addChild(player.sprite);\n    }\n\n    /////////////////////////////added player jet///////////////////////////////\n  });\n  ///////////////////remove enemy jet if it got hit by player bullet//////////////\n  const enemyJetTexture = PIXI.Texture.from(\"./src/assets/jet.png\");\n  const bossJetTexture = PIXI.Texture.from(\"./src/assets/boss.png\");\n  const enemyJets = [];\n  let bossJet = null;\n  // Add this function to spawn a group of 5 enemy jets\n  function spawnEnemyJets() {\n    for (let i = 0; i < 1; i++) {\n      const enemyJet = new _scripts_EnemyJet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](app.view.width, Math.random() * app.view.height / 3, enemyJetTexture, enemyBullets, app, \"common\", -1, 0);\n      enemyJets.push(enemyJet);\n      app.stage.addChild(enemyJet.sprite);\n    }\n  }\n  function spawnBossJets() {\n    bossJet = new _scripts_EnemyJet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](app.view.width, Math.random() * app.view.height / 4, bossJetTexture, enemyBullets, app, \"boss\", -1, 0);\n    app.stage.addChild(bossJet.sprite);\n    enemyJets.push(bossJet);\n  }\n  let enemySpawnCount = 0;\n  const enemyCount = 10;\n\n  // Call spawnEnemyJets function every 10 seconds\n  const spawnInterval = setInterval(() => {\n    if (enemySpawnCount < enemyCount) {\n      spawnEnemyJets();\n      enemySpawnCount++;\n    } else {\n      spawnBossJets();\n      clearInterval(spawnInterval);\n    }\n  }, 1000);\n  app.ticker.add(() => {\n    enemyJets.forEach((enemyJet, i) => {\n      const collided = enemyJet.checkCollisions(playerBullets);\n      if (collided) {\n        console.log(\"Enemy jet destroyed!\");\n        score.enemyKillCount++;\n        // document.getElementById(\"scoreValue\").innerHTML = score.enemyKillCount;\n        document.getElementById(\"scoreValue\").innerText = `Score: ${score.enemyKillCount}`;\n        player.upgradeWeapon();\n\n        // Remove the destroyed enemy jet from the array\n        enemyJets.splice(i, 1);\n\n        // Remove the enemy jet sprite\n        app.stage.removeChild(enemyJet.sprite);\n        clearInterval(enemyJet.bulletInterval);\n        // Add explosion animation\n        const spriteSheet = PIXI.Texture.from(\"./src/assets/enemyExplosion.png\");\n        const frameWidth = 192;\n        const frameHeight = 192;\n        const numRows = 4;\n        const numCols = 5;\n        const explosionTextures = [];\n        for (let row = 0; row < numRows; row++) {\n          for (let col = 0; col < numCols; col++) {\n            const frameTexture = new PIXI.Texture(spriteSheet, new PIXI.Rectangle(col * frameWidth, row * frameHeight, frameWidth, frameHeight));\n            explosionTextures.push(frameTexture);\n          }\n        }\n        const explosionSprite = new PIXI.AnimatedSprite(explosionTextures);\n        explosionSprite.anchor.set(0.5);\n        explosionSprite.loop = true;\n        explosionSprite.animationSpeed = 0.1;\n        explosionSprite.visible = true;\n        explosionSprite.position.set(enemyJet.sprite.x, enemyJet.sprite.y);\n        app.stage.addChild(explosionSprite);\n        explosionSprite.play();\n\n        // Remove explosion animation after 1 second\n        setTimeout(() => {\n          app.stage.removeChild(explosionSprite);\n        }, 1000);\n      }\n      if (enemyJet.checkBounds()) {\n        app.stage.removeChild(enemyJet.sprite);\n        enemyJets.splice(i, 1); // Remove the enemy jet from the enemyJets array\n        clearInterval(enemyJet.bulletInterval);\n      }\n    });\n    const playerCollided = player.checkCollisions(enemyBullets);\n    if (playerCollided) {\n      player.destroyed = true;\n      app.stage.removeChild(player.sprite);\n      clearInterval(player.currentWeapon);\n      const spriteSheet = PIXI.Texture.from(\"./src/assets/enemyExplosion.png\");\n      const frameWidth = 192;\n      const frameHeight = 192;\n      const numRows = 4;\n      const numCols = 5;\n      const explosionTextures = [];\n      for (let row = 0; row < numRows; row++) {\n        for (let col = 0; col < numCols; col++) {\n          const frameTexture = new PIXI.Texture(spriteSheet, new PIXI.Rectangle(col * frameWidth, row * frameHeight, frameWidth, frameHeight));\n          explosionTextures.push(frameTexture);\n        }\n      }\n      const explosionSprite = new PIXI.AnimatedSprite(explosionTextures);\n      explosionSprite.anchor.set(0.5);\n      explosionSprite.loop = true;\n      explosionSprite.animationSpeed = 0.1;\n      explosionSprite.visible = true;\n      explosionSprite.position.set(player.sprite.x, player.sprite.y);\n      app.stage.addChild(explosionSprite);\n      explosionSprite.play();\n\n      // Remove explosion animation after 1 second\n      setTimeout(() => {\n        app.stage.removeChild(explosionSprite);\n      }, 1000);\n      if (player.hp !== 0) {\n        player = player.spawnNewPlayerJet();\n      }\n    }\n  });\n}\ndocument.addEventListener(\"keydown\", event => {\n  if (event.code === \"Space\") {\n    if (!gameStarted) {\n      gameStarted = true;\n      startGame();\n      document.getElementById(\"startScreen\").style.display = \"none\";\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQTRDO0FBQ0Y7QUFFMUMsSUFBSUUsV0FBVyxHQUFHLEtBQUs7QUFDdkIsU0FBU0MsU0FBU0EsQ0FBQSxFQUFHO0VBQ25CLE1BQU1DLEdBQUcsR0FBRyxJQUFJQyxJQUFJLENBQUNDLFdBQVcsQ0FBQztJQUMvQkMsS0FBSyxFQUFFLEdBQUc7SUFDVkMsTUFBTSxFQUFFLEdBQUc7SUFDWEMsZUFBZSxFQUFFO0VBQ25CLENBQUMsQ0FBQztFQUNGO0VBQ0FDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDQyxXQUFXLENBQUNSLEdBQUcsQ0FBQ1MsSUFBSSxDQUFDO0VBQ3JELGVBQWVDLEtBQUtBLENBQUEsRUFBRztJQUNyQixNQUFNQyxVQUFVLEdBQUcsQ0FDakIsTUFBTVYsSUFBSSxDQUFDVyxNQUFNLENBQUNDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxFQUM5QyxNQUFNWixJQUFJLENBQUNXLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLHNCQUFzQixDQUFDLEVBQzlDLE1BQU1aLElBQUksQ0FBQ1csTUFBTSxDQUFDQyxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FDL0M7SUFFRCxNQUFNQyxjQUFjLEdBQUcsSUFBSWIsSUFBSSxDQUFDYyxNQUFNLENBQUNKLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNyRFgsR0FBRyxDQUFDZ0IsS0FBSyxDQUFDQyxRQUFRLENBQUNILGNBQWMsQ0FBQztJQUVsQyxNQUFNSSxtQkFBbUIsR0FBRyxDQUMxQixJQUFJakIsSUFBSSxDQUFDYyxNQUFNLENBQUNKLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUM5QixJQUFJVixJQUFJLENBQUNjLE1BQU0sQ0FBQ0osVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQy9CO0lBRURPLG1CQUFtQixDQUFDQyxPQUFPLENBQUMsQ0FBQ0MsRUFBRSxFQUFFQyxLQUFLLEtBQUs7TUFDekNELEVBQUUsQ0FBQ0UsS0FBSyxHQUFHRCxLQUFLLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDO01BQzlCckIsR0FBRyxDQUFDZ0IsS0FBSyxDQUFDQyxRQUFRLENBQUNHLEVBQUUsQ0FBQztJQUN4QixDQUFDLENBQUM7SUFFRixJQUFJRyxNQUFNLEdBQUcsSUFBSTtJQUNqQixJQUFJQyxjQUFjLEdBQUcsQ0FBQztJQUN0QixJQUFJQyxXQUFXLEdBQUcsQ0FBQztJQUVuQnpCLEdBQUcsQ0FBQzBCLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLE1BQU07TUFDbkIsSUFBSUosTUFBTSxFQUFFO1FBQ1ZMLG1CQUFtQixDQUFDTyxXQUFXLENBQUMsQ0FBQ0gsS0FBSyxJQUFJLEtBQUs7UUFDL0MsSUFBSUosbUJBQW1CLENBQUNPLFdBQVcsQ0FBQyxDQUFDSCxLQUFLLElBQUksQ0FBQyxFQUFFO1VBQy9DQyxNQUFNLEdBQUcsS0FBSztVQUNkQyxjQUFjLEdBQUcsQ0FBQ0EsY0FBYyxHQUFHLENBQUMsSUFBSU4sbUJBQW1CLENBQUNVLE1BQU07VUFDbEVILFdBQVcsR0FBRyxDQUFDRCxjQUFjLEdBQUcsQ0FBQyxJQUFJTixtQkFBbUIsQ0FBQ1UsTUFBTTtRQUNqRTtNQUNGLENBQUMsTUFBTTtRQUNMVixtQkFBbUIsQ0FBQ00sY0FBYyxDQUFDLENBQUNGLEtBQUssSUFBSSxLQUFLO1FBQ2xELElBQUlKLG1CQUFtQixDQUFDTSxjQUFjLENBQUMsQ0FBQ0YsS0FBSyxJQUFJLENBQUMsRUFBRTtVQUNsREMsTUFBTSxHQUFHLElBQUk7UUFDZjtNQUNGO0lBQ0YsQ0FBQyxDQUFDO0VBQ0o7RUFFQWIsS0FBSyxDQUFDLENBQUM7RUFDUDtFQUNBLE1BQU1tQixhQUFhLEdBQUc1QixJQUFJLENBQUM2QixPQUFPLENBQUNDLElBQUksQ0FBQyw0QkFBNEIsQ0FBQztFQUNyRSxNQUFNQyxhQUFhLEdBQUcsRUFBRTtFQUN4QixNQUFNQyxZQUFZLEdBQUcsRUFBRTtFQUN2QixNQUFNQyxLQUFLLEdBQUc7SUFDWkMsY0FBYyxFQUFFO0VBQ2xCLENBQUM7RUFFRCxJQUFJQyxNQUFNLEdBQUcsSUFBSXhDLDBEQUFTLENBQ3hCSSxHQUFHLEVBQ0hBLEdBQUcsQ0FBQ1MsSUFBSSxDQUFDTixLQUFLLEdBQUcsQ0FBQyxFQUNsQkgsR0FBRyxDQUFDUyxJQUFJLENBQUNMLE1BQU0sR0FBRyxFQUFFLEVBQ3BCeUIsYUFBYSxFQUNiRyxhQUFhLEVBQ2JFLEtBQUssRUFDTCxDQUNGLENBQUM7RUFDRCxNQUFNRyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0VBQ2YsSUFBSUMsUUFBUSxHQUFHLEtBQUs7RUFFcEJoQyxRQUFRLENBQUNpQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUdDLENBQUMsSUFBSztJQUMxQyxJQUFJQSxDQUFDLENBQUNDLEdBQUcsS0FBSyxHQUFHLElBQUlELENBQUMsQ0FBQ0MsR0FBRyxLQUFLLEdBQUcsRUFBRTtNQUNsQyxJQUFJSCxRQUFRLEVBQUU7UUFDWnRDLEdBQUcsQ0FBQzBCLE1BQU0sQ0FBQ2dCLEtBQUssQ0FBQyxDQUFDO01BQ3BCLENBQUMsTUFBTTtRQUNMMUMsR0FBRyxDQUFDMEIsTUFBTSxDQUFDaUIsSUFBSSxDQUFDLENBQUM7TUFDbkI7TUFDQUwsUUFBUSxHQUFHLENBQUNBLFFBQVE7SUFDdEIsQ0FBQyxNQUFNO01BQ0xELElBQUksQ0FBQ0csQ0FBQyxDQUFDQyxHQUFHLENBQUMsR0FBRyxJQUFJO0lBQ3BCO0VBQ0YsQ0FBQyxDQUFDO0VBQ0ZuQyxRQUFRLENBQUNpQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUdDLENBQUMsSUFBSztJQUN4Q0gsSUFBSSxDQUFDRyxDQUFDLENBQUNDLEdBQUcsQ0FBQyxHQUFHLEtBQUs7RUFDckIsQ0FBQyxDQUFDOztFQUVGO0VBQ0F6QyxHQUFHLENBQUMwQixNQUFNLENBQUNDLEdBQUcsQ0FBQyxNQUFNO0lBQ25CLElBQUksQ0FBQ1MsTUFBTSxDQUFDUSxTQUFTLEVBQUU7TUFDckJSLE1BQU0sQ0FBQ1MsY0FBYyxDQUFDUixJQUFJLENBQUM7TUFDM0JyQyxHQUFHLENBQUNnQixLQUFLLENBQUNDLFFBQVEsQ0FBQ21CLE1BQU0sQ0FBQ1UsTUFBTSxDQUFDO0lBQ25DOztJQUVBO0VBQ0YsQ0FBQyxDQUFDO0VBQ0Y7RUFDQSxNQUFNQyxlQUFlLEdBQUc5QyxJQUFJLENBQUM2QixPQUFPLENBQUNDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQztFQUNqRSxNQUFNaUIsY0FBYyxHQUFHL0MsSUFBSSxDQUFDNkIsT0FBTyxDQUFDQyxJQUFJLENBQUMsdUJBQXVCLENBQUM7RUFFakUsTUFBTWtCLFNBQVMsR0FBRyxFQUFFO0VBQ3BCLElBQUlDLE9BQU8sR0FBRyxJQUFJO0VBQ2xCO0VBQ0EsU0FBU0MsY0FBY0EsQ0FBQSxFQUFHO0lBQ3hCLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxFQUFFLEVBQUU7TUFDMUIsTUFBTUMsUUFBUSxHQUFHLElBQUl4RCx5REFBUSxDQUMzQkcsR0FBRyxDQUFDUyxJQUFJLENBQUNOLEtBQUssRUFDYm1ELElBQUksQ0FBQ0MsTUFBTSxDQUFDLENBQUMsR0FBR3ZELEdBQUcsQ0FBQ1MsSUFBSSxDQUFDTCxNQUFNLEdBQUksQ0FBQyxFQUNyQzJDLGVBQWUsRUFDZmQsWUFBWSxFQUNaakMsR0FBRyxFQUNILFFBQVEsRUFDUixDQUFDLENBQUMsRUFDRixDQUNGLENBQUM7TUFDRGlELFNBQVMsQ0FBQ08sSUFBSSxDQUFDSCxRQUFRLENBQUM7TUFDeEJyRCxHQUFHLENBQUNnQixLQUFLLENBQUNDLFFBQVEsQ0FBQ29DLFFBQVEsQ0FBQ1AsTUFBTSxDQUFDO0lBQ3JDO0VBQ0Y7RUFFQSxTQUFTVyxhQUFhQSxDQUFBLEVBQUc7SUFDdkJQLE9BQU8sR0FBRyxJQUFJckQseURBQVEsQ0FDcEJHLEdBQUcsQ0FBQ1MsSUFBSSxDQUFDTixLQUFLLEVBQ2JtRCxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLEdBQUd2RCxHQUFHLENBQUNTLElBQUksQ0FBQ0wsTUFBTSxHQUFJLENBQUMsRUFDckM0QyxjQUFjLEVBQ2RmLFlBQVksRUFDWmpDLEdBQUcsRUFDSCxNQUFNLEVBQ04sQ0FBQyxDQUFDLEVBQ0YsQ0FDRixDQUFDO0lBQ0RBLEdBQUcsQ0FBQ2dCLEtBQUssQ0FBQ0MsUUFBUSxDQUFDaUMsT0FBTyxDQUFDSixNQUFNLENBQUM7SUFDbENHLFNBQVMsQ0FBQ08sSUFBSSxDQUFDTixPQUFPLENBQUM7RUFDekI7RUFDQSxJQUFJUSxlQUFlLEdBQUcsQ0FBQztFQUV2QixNQUFNQyxVQUFVLEdBQUcsRUFBRTs7RUFFckI7RUFDQSxNQUFNQyxhQUFhLEdBQUdDLFdBQVcsQ0FBQyxNQUFNO0lBQ3RDLElBQUlILGVBQWUsR0FBR0MsVUFBVSxFQUFFO01BQ2hDUixjQUFjLENBQUMsQ0FBQztNQUNoQk8sZUFBZSxFQUFFO0lBQ25CLENBQUMsTUFBTTtNQUNMRCxhQUFhLENBQUMsQ0FBQztNQUNmSyxhQUFhLENBQUNGLGFBQWEsQ0FBQztJQUM5QjtFQUNGLENBQUMsRUFBRSxJQUFJLENBQUM7RUFFUjVELEdBQUcsQ0FBQzBCLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLE1BQU07SUFDbkJzQixTQUFTLENBQUM5QixPQUFPLENBQUMsQ0FBQ2tDLFFBQVEsRUFBRUQsQ0FBQyxLQUFLO01BQ2pDLE1BQU1XLFFBQVEsR0FBR1YsUUFBUSxDQUFDVyxlQUFlLENBQUNoQyxhQUFhLENBQUM7TUFFeEQsSUFBSStCLFFBQVEsRUFBRTtRQUNaRSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQztRQUNuQ2hDLEtBQUssQ0FBQ0MsY0FBYyxFQUFFO1FBQ3RCO1FBQ0E3QixRQUFRLENBQUNDLGNBQWMsQ0FDckIsWUFDRixDQUFDLENBQUM0RCxTQUFTLEdBQUksVUFBU2pDLEtBQUssQ0FBQ0MsY0FBZSxFQUFDO1FBRTlDQyxNQUFNLENBQUNnQyxhQUFhLENBQUMsQ0FBQzs7UUFFdEI7UUFDQW5CLFNBQVMsQ0FBQ29CLE1BQU0sQ0FBQ2pCLENBQUMsRUFBRSxDQUFDLENBQUM7O1FBRXRCO1FBQ0FwRCxHQUFHLENBQUNnQixLQUFLLENBQUNzRCxXQUFXLENBQUNqQixRQUFRLENBQUNQLE1BQU0sQ0FBQztRQUN0Q2dCLGFBQWEsQ0FBQ1QsUUFBUSxDQUFDa0IsY0FBYyxDQUFDO1FBQ3RDO1FBQ0EsTUFBTUMsV0FBVyxHQUFHdkUsSUFBSSxDQUFDNkIsT0FBTyxDQUFDQyxJQUFJLENBQ25DLGlDQUNGLENBQUM7UUFDRCxNQUFNMEMsVUFBVSxHQUFHLEdBQUc7UUFDdEIsTUFBTUMsV0FBVyxHQUFHLEdBQUc7UUFDdkIsTUFBTUMsT0FBTyxHQUFHLENBQUM7UUFDakIsTUFBTUMsT0FBTyxHQUFHLENBQUM7UUFDakIsTUFBTUMsaUJBQWlCLEdBQUcsRUFBRTtRQUU1QixLQUFLLElBQUlDLEdBQUcsR0FBRyxDQUFDLEVBQUVBLEdBQUcsR0FBR0gsT0FBTyxFQUFFRyxHQUFHLEVBQUUsRUFBRTtVQUN0QyxLQUFLLElBQUlDLEdBQUcsR0FBRyxDQUFDLEVBQUVBLEdBQUcsR0FBR0gsT0FBTyxFQUFFRyxHQUFHLEVBQUUsRUFBRTtZQUN0QyxNQUFNQyxZQUFZLEdBQUcsSUFBSS9FLElBQUksQ0FBQzZCLE9BQU8sQ0FDbkMwQyxXQUFXLEVBQ1gsSUFBSXZFLElBQUksQ0FBQ2dGLFNBQVMsQ0FDaEJGLEdBQUcsR0FBR04sVUFBVSxFQUNoQkssR0FBRyxHQUFHSixXQUFXLEVBQ2pCRCxVQUFVLEVBQ1ZDLFdBQ0YsQ0FDRixDQUFDO1lBQ0RHLGlCQUFpQixDQUFDckIsSUFBSSxDQUFDd0IsWUFBWSxDQUFDO1VBQ3RDO1FBQ0Y7UUFFQSxNQUFNRSxlQUFlLEdBQUcsSUFBSWpGLElBQUksQ0FBQ2tGLGNBQWMsQ0FBQ04saUJBQWlCLENBQUM7UUFDbEVLLGVBQWUsQ0FBQ0UsTUFBTSxDQUFDQyxHQUFHLENBQUMsR0FBRyxDQUFDO1FBQy9CSCxlQUFlLENBQUNJLElBQUksR0FBRyxJQUFJO1FBQzNCSixlQUFlLENBQUNLLGNBQWMsR0FBRyxHQUFHO1FBQ3BDTCxlQUFlLENBQUNNLE9BQU8sR0FBRyxJQUFJO1FBQzlCTixlQUFlLENBQUNPLFFBQVEsQ0FBQ0osR0FBRyxDQUFDaEMsUUFBUSxDQUFDUCxNQUFNLENBQUM0QyxDQUFDLEVBQUVyQyxRQUFRLENBQUNQLE1BQU0sQ0FBQzZDLENBQUMsQ0FBQztRQUNsRTNGLEdBQUcsQ0FBQ2dCLEtBQUssQ0FBQ0MsUUFBUSxDQUFDaUUsZUFBZSxDQUFDO1FBQ25DQSxlQUFlLENBQUNVLElBQUksQ0FBQyxDQUFDOztRQUV0QjtRQUNBQyxVQUFVLENBQUMsTUFBTTtVQUNmN0YsR0FBRyxDQUFDZ0IsS0FBSyxDQUFDc0QsV0FBVyxDQUFDWSxlQUFlLENBQUM7UUFDeEMsQ0FBQyxFQUFFLElBQUksQ0FBQztNQUNWO01BRUEsSUFBSTdCLFFBQVEsQ0FBQ3lDLFdBQVcsQ0FBQyxDQUFDLEVBQUU7UUFDMUI5RixHQUFHLENBQUNnQixLQUFLLENBQUNzRCxXQUFXLENBQUNqQixRQUFRLENBQUNQLE1BQU0sQ0FBQztRQUN0Q0csU0FBUyxDQUFDb0IsTUFBTSxDQUFDakIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEJVLGFBQWEsQ0FBQ1QsUUFBUSxDQUFDa0IsY0FBYyxDQUFDO01BQ3hDO0lBQ0YsQ0FBQyxDQUFDO0lBRUYsTUFBTXdCLGNBQWMsR0FBRzNELE1BQU0sQ0FBQzRCLGVBQWUsQ0FBQy9CLFlBQVksQ0FBQztJQUUzRCxJQUFJOEQsY0FBYyxFQUFFO01BQ2xCM0QsTUFBTSxDQUFDUSxTQUFTLEdBQUcsSUFBSTtNQUN2QjVDLEdBQUcsQ0FBQ2dCLEtBQUssQ0FBQ3NELFdBQVcsQ0FBQ2xDLE1BQU0sQ0FBQ1UsTUFBTSxDQUFDO01BQ3BDZ0IsYUFBYSxDQUFDMUIsTUFBTSxDQUFDNEQsYUFBYSxDQUFDO01BRW5DLE1BQU14QixXQUFXLEdBQUd2RSxJQUFJLENBQUM2QixPQUFPLENBQUNDLElBQUksQ0FBQyxpQ0FBaUMsQ0FBQztNQUN4RSxNQUFNMEMsVUFBVSxHQUFHLEdBQUc7TUFDdEIsTUFBTUMsV0FBVyxHQUFHLEdBQUc7TUFDdkIsTUFBTUMsT0FBTyxHQUFHLENBQUM7TUFDakIsTUFBTUMsT0FBTyxHQUFHLENBQUM7TUFDakIsTUFBTUMsaUJBQWlCLEdBQUcsRUFBRTtNQUU1QixLQUFLLElBQUlDLEdBQUcsR0FBRyxDQUFDLEVBQUVBLEdBQUcsR0FBR0gsT0FBTyxFQUFFRyxHQUFHLEVBQUUsRUFBRTtRQUN0QyxLQUFLLElBQUlDLEdBQUcsR0FBRyxDQUFDLEVBQUVBLEdBQUcsR0FBR0gsT0FBTyxFQUFFRyxHQUFHLEVBQUUsRUFBRTtVQUN0QyxNQUFNQyxZQUFZLEdBQUcsSUFBSS9FLElBQUksQ0FBQzZCLE9BQU8sQ0FDbkMwQyxXQUFXLEVBQ1gsSUFBSXZFLElBQUksQ0FBQ2dGLFNBQVMsQ0FDaEJGLEdBQUcsR0FBR04sVUFBVSxFQUNoQkssR0FBRyxHQUFHSixXQUFXLEVBQ2pCRCxVQUFVLEVBQ1ZDLFdBQ0YsQ0FDRixDQUFDO1VBQ0RHLGlCQUFpQixDQUFDckIsSUFBSSxDQUFDd0IsWUFBWSxDQUFDO1FBQ3RDO01BQ0Y7TUFFQSxNQUFNRSxlQUFlLEdBQUcsSUFBSWpGLElBQUksQ0FBQ2tGLGNBQWMsQ0FBQ04saUJBQWlCLENBQUM7TUFDbEVLLGVBQWUsQ0FBQ0UsTUFBTSxDQUFDQyxHQUFHLENBQUMsR0FBRyxDQUFDO01BQy9CSCxlQUFlLENBQUNJLElBQUksR0FBRyxJQUFJO01BQzNCSixlQUFlLENBQUNLLGNBQWMsR0FBRyxHQUFHO01BQ3BDTCxlQUFlLENBQUNNLE9BQU8sR0FBRyxJQUFJO01BQzlCTixlQUFlLENBQUNPLFFBQVEsQ0FBQ0osR0FBRyxDQUFDakQsTUFBTSxDQUFDVSxNQUFNLENBQUM0QyxDQUFDLEVBQUV0RCxNQUFNLENBQUNVLE1BQU0sQ0FBQzZDLENBQUMsQ0FBQztNQUU5RDNGLEdBQUcsQ0FBQ2dCLEtBQUssQ0FBQ0MsUUFBUSxDQUFDaUUsZUFBZSxDQUFDO01BQ25DQSxlQUFlLENBQUNVLElBQUksQ0FBQyxDQUFDOztNQUV0QjtNQUNBQyxVQUFVLENBQUMsTUFBTTtRQUNmN0YsR0FBRyxDQUFDZ0IsS0FBSyxDQUFDc0QsV0FBVyxDQUFDWSxlQUFlLENBQUM7TUFDeEMsQ0FBQyxFQUFFLElBQUksQ0FBQztNQUNSLElBQUk5QyxNQUFNLENBQUM2RCxFQUFFLEtBQUssQ0FBQyxFQUFFO1FBQ25CN0QsTUFBTSxHQUFHQSxNQUFNLENBQUM4RCxpQkFBaUIsQ0FBQyxDQUFDO01BQ3JDO0lBQ0Y7RUFDRixDQUFDLENBQUM7QUFDSjtBQUNBNUYsUUFBUSxDQUFDaUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFHNEQsS0FBSyxJQUFLO0VBQzlDLElBQUlBLEtBQUssQ0FBQ0MsSUFBSSxLQUFLLE9BQU8sRUFBRTtJQUMxQixJQUFJLENBQUN0RyxXQUFXLEVBQUU7TUFDaEJBLFdBQVcsR0FBRyxJQUFJO01BQ2xCQyxTQUFTLENBQUMsQ0FBQztNQUNYTyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQzhGLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07SUFDL0Q7RUFDRjtBQUNGLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2pzcHJvamVjdC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQbGF5ZXJKZXQgZnJvbSBcIi4vc2NyaXB0cy9QbGF5ZXJKZXRcIjtcclxuaW1wb3J0IEVuZW15SmV0IGZyb20gXCIuL3NjcmlwdHMvRW5lbXlKZXRcIjtcclxuXHJcbmxldCBnYW1lU3RhcnRlZCA9IGZhbHNlO1xyXG5mdW5jdGlvbiBzdGFydEdhbWUoKSB7XHJcbiAgY29uc3QgYXBwID0gbmV3IFBJWEkuQXBwbGljYXRpb24oe1xyXG4gICAgd2lkdGg6IDgwMCxcclxuICAgIGhlaWdodDogNjAwLFxyXG4gICAgYmFja2dyb3VuZENvbG9yOiAweDEwOTliYixcclxuICB9KTtcclxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9jcmVhdGUgZ2FtZWJvYXJkLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKS5hcHBlbmRDaGlsZChhcHAudmlldyk7XHJcbiAgYXN5bmMgZnVuY3Rpb24gc2V0dXAoKSB7XHJcbiAgICBjb25zdCBiZ1RleHR1cmVzID0gW1xyXG4gICAgICBhd2FpdCBQSVhJLkFzc2V0cy5sb2FkKFwiLi9zcmMvYXNzZXRzL2JnMS5wbmdcIiksXHJcbiAgICAgIGF3YWl0IFBJWEkuQXNzZXRzLmxvYWQoXCIuL3NyYy9hc3NldHMvYmcyLnBuZ1wiKSxcclxuICAgICAgYXdhaXQgUElYSS5Bc3NldHMubG9hZChcIi4vc3JjL2Fzc2V0cy9iZzMucG5nXCIpLFxyXG4gICAgXTtcclxuXHJcbiAgICBjb25zdCBiYXNlQmFja2dyb3VuZCA9IG5ldyBQSVhJLlNwcml0ZShiZ1RleHR1cmVzWzBdKTtcclxuICAgIGFwcC5zdGFnZS5hZGRDaGlsZChiYXNlQmFja2dyb3VuZCk7XHJcblxyXG4gICAgY29uc3QgY2hhbmdpbmdCYWNrZ3JvdW5kcyA9IFtcclxuICAgICAgbmV3IFBJWEkuU3ByaXRlKGJnVGV4dHVyZXNbMV0pLFxyXG4gICAgICBuZXcgUElYSS5TcHJpdGUoYmdUZXh0dXJlc1syXSksXHJcbiAgICBdO1xyXG5cclxuICAgIGNoYW5naW5nQmFja2dyb3VuZHMuZm9yRWFjaCgoYmcsIGluZGV4KSA9PiB7XHJcbiAgICAgIGJnLmFscGhhID0gaW5kZXggPT09IDAgPyAxIDogMDtcclxuICAgICAgYXBwLnN0YWdlLmFkZENoaWxkKGJnKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGxldCBmYWRlSW4gPSB0cnVlO1xyXG4gICAgbGV0IGN1cnJlbnRCZ0luZGV4ID0gMDtcclxuICAgIGxldCBuZXh0QmdJbmRleCA9IDE7XHJcblxyXG4gICAgYXBwLnRpY2tlci5hZGQoKCkgPT4ge1xyXG4gICAgICBpZiAoZmFkZUluKSB7XHJcbiAgICAgICAgY2hhbmdpbmdCYWNrZ3JvdW5kc1tuZXh0QmdJbmRleF0uYWxwaGEgKz0gMC4wMDU7XHJcbiAgICAgICAgaWYgKGNoYW5naW5nQmFja2dyb3VuZHNbbmV4dEJnSW5kZXhdLmFscGhhID49IDEpIHtcclxuICAgICAgICAgIGZhZGVJbiA9IGZhbHNlO1xyXG4gICAgICAgICAgY3VycmVudEJnSW5kZXggPSAoY3VycmVudEJnSW5kZXggKyAxKSAlIGNoYW5naW5nQmFja2dyb3VuZHMubGVuZ3RoO1xyXG4gICAgICAgICAgbmV4dEJnSW5kZXggPSAoY3VycmVudEJnSW5kZXggKyAxKSAlIGNoYW5naW5nQmFja2dyb3VuZHMubGVuZ3RoO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjaGFuZ2luZ0JhY2tncm91bmRzW2N1cnJlbnRCZ0luZGV4XS5hbHBoYSAtPSAwLjAwNTtcclxuICAgICAgICBpZiAoY2hhbmdpbmdCYWNrZ3JvdW5kc1tjdXJyZW50QmdJbmRleF0uYWxwaGEgPD0gMCkge1xyXG4gICAgICAgICAgZmFkZUluID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgc2V0dXAoKTtcclxuICAvLy8vLy8vLy8vLy8vLy9mYWRpbmcgYmFja2dyb3VuZC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbiAgY29uc3QgcGxheWVyVGV4dHVyZSA9IFBJWEkuVGV4dHVyZS5mcm9tKFwiLi9zcmMvYXNzZXRzL3BsYXllcmpldC5wbmdcIik7XHJcbiAgY29uc3QgcGxheWVyQnVsbGV0cyA9IFtdO1xyXG4gIGNvbnN0IGVuZW15QnVsbGV0cyA9IFtdO1xyXG4gIGNvbnN0IHNjb3JlID0ge1xyXG4gICAgZW5lbXlLaWxsQ291bnQ6IDAsXHJcbiAgfTtcclxuXHJcbiAgbGV0IHBsYXllciA9IG5ldyBQbGF5ZXJKZXQoXHJcbiAgICBhcHAsXHJcbiAgICBhcHAudmlldy53aWR0aCAvIDIsXHJcbiAgICBhcHAudmlldy5oZWlnaHQgLSA1MCxcclxuICAgIHBsYXllclRleHR1cmUsXHJcbiAgICBwbGF5ZXJCdWxsZXRzLFxyXG4gICAgc2NvcmUsXHJcbiAgICAzXHJcbiAgKTtcclxuICBjb25zdCBrZXlzID0ge307XHJcbiAgbGV0IGlzUGF1c2VkID0gZmFsc2U7XHJcblxyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIChlKSA9PiB7XHJcbiAgICBpZiAoZS5rZXkgPT09IFwiUFwiIHx8IGUua2V5ID09PSBcInBcIikge1xyXG4gICAgICBpZiAoaXNQYXVzZWQpIHtcclxuICAgICAgICBhcHAudGlja2VyLnN0YXJ0KCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgYXBwLnRpY2tlci5zdG9wKCk7XHJcbiAgICAgIH1cclxuICAgICAgaXNQYXVzZWQgPSAhaXNQYXVzZWQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBrZXlzW2Uua2V5XSA9IHRydWU7XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIChlKSA9PiB7XHJcbiAgICBrZXlzW2Uua2V5XSA9IGZhbHNlO1xyXG4gIH0pO1xyXG5cclxuICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vdG8gc2V0IHRoZSBwbGF5ZXIgY2FuIGhvbGQgb24gdG8ga2V5IHRvIGtlZXAgbW92aW5nIG9uIHRoZSBkaXJlY3Rpb24vLy8vLy8vLy8vLy8vXHJcbiAgYXBwLnRpY2tlci5hZGQoKCkgPT4ge1xyXG4gICAgaWYgKCFwbGF5ZXIuZGVzdHJveWVkKSB7XHJcbiAgICAgIHBsYXllci5oYW5kbGVLZXlib2FyZChrZXlzKTtcclxuICAgICAgYXBwLnN0YWdlLmFkZENoaWxkKHBsYXllci5zcHJpdGUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vYWRkZWQgcGxheWVyIGpldC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuICB9KTtcclxuICAvLy8vLy8vLy8vLy8vLy8vLy8vcmVtb3ZlIGVuZW15IGpldCBpZiBpdCBnb3QgaGl0IGJ5IHBsYXllciBidWxsZXQvLy8vLy8vLy8vLy8vL1xyXG4gIGNvbnN0IGVuZW15SmV0VGV4dHVyZSA9IFBJWEkuVGV4dHVyZS5mcm9tKFwiLi9zcmMvYXNzZXRzL2pldC5wbmdcIik7XHJcbiAgY29uc3QgYm9zc0pldFRleHR1cmUgPSBQSVhJLlRleHR1cmUuZnJvbShcIi4vc3JjL2Fzc2V0cy9ib3NzLnBuZ1wiKTtcclxuXHJcbiAgY29uc3QgZW5lbXlKZXRzID0gW107XHJcbiAgbGV0IGJvc3NKZXQgPSBudWxsO1xyXG4gIC8vIEFkZCB0aGlzIGZ1bmN0aW9uIHRvIHNwYXduIGEgZ3JvdXAgb2YgNSBlbmVteSBqZXRzXHJcbiAgZnVuY3Rpb24gc3Bhd25FbmVteUpldHMoKSB7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE7IGkrKykge1xyXG4gICAgICBjb25zdCBlbmVteUpldCA9IG5ldyBFbmVteUpldChcclxuICAgICAgICBhcHAudmlldy53aWR0aCxcclxuICAgICAgICAoTWF0aC5yYW5kb20oKSAqIGFwcC52aWV3LmhlaWdodCkgLyAzLFxyXG4gICAgICAgIGVuZW15SmV0VGV4dHVyZSxcclxuICAgICAgICBlbmVteUJ1bGxldHMsXHJcbiAgICAgICAgYXBwLFxyXG4gICAgICAgIFwiY29tbW9uXCIsXHJcbiAgICAgICAgLTEsXHJcbiAgICAgICAgMFxyXG4gICAgICApO1xyXG4gICAgICBlbmVteUpldHMucHVzaChlbmVteUpldCk7XHJcbiAgICAgIGFwcC5zdGFnZS5hZGRDaGlsZChlbmVteUpldC5zcHJpdGUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc3Bhd25Cb3NzSmV0cygpIHtcclxuICAgIGJvc3NKZXQgPSBuZXcgRW5lbXlKZXQoXHJcbiAgICAgIGFwcC52aWV3LndpZHRoLFxyXG4gICAgICAoTWF0aC5yYW5kb20oKSAqIGFwcC52aWV3LmhlaWdodCkgLyA0LFxyXG4gICAgICBib3NzSmV0VGV4dHVyZSxcclxuICAgICAgZW5lbXlCdWxsZXRzLFxyXG4gICAgICBhcHAsXHJcbiAgICAgIFwiYm9zc1wiLFxyXG4gICAgICAtMSxcclxuICAgICAgMFxyXG4gICAgKTtcclxuICAgIGFwcC5zdGFnZS5hZGRDaGlsZChib3NzSmV0LnNwcml0ZSk7XHJcbiAgICBlbmVteUpldHMucHVzaChib3NzSmV0KTtcclxuICB9XHJcbiAgbGV0IGVuZW15U3Bhd25Db3VudCA9IDA7XHJcblxyXG4gIGNvbnN0IGVuZW15Q291bnQgPSAxMDtcclxuXHJcbiAgLy8gQ2FsbCBzcGF3bkVuZW15SmV0cyBmdW5jdGlvbiBldmVyeSAxMCBzZWNvbmRzXHJcbiAgY29uc3Qgc3Bhd25JbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgIGlmIChlbmVteVNwYXduQ291bnQgPCBlbmVteUNvdW50KSB7XHJcbiAgICAgIHNwYXduRW5lbXlKZXRzKCk7XHJcbiAgICAgIGVuZW15U3Bhd25Db3VudCsrO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgc3Bhd25Cb3NzSmV0cygpO1xyXG4gICAgICBjbGVhckludGVydmFsKHNwYXduSW50ZXJ2YWwpO1xyXG4gICAgfVxyXG4gIH0sIDEwMDApO1xyXG5cclxuICBhcHAudGlja2VyLmFkZCgoKSA9PiB7XHJcbiAgICBlbmVteUpldHMuZm9yRWFjaCgoZW5lbXlKZXQsIGkpID0+IHtcclxuICAgICAgY29uc3QgY29sbGlkZWQgPSBlbmVteUpldC5jaGVja0NvbGxpc2lvbnMocGxheWVyQnVsbGV0cyk7XHJcblxyXG4gICAgICBpZiAoY29sbGlkZWQpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkVuZW15IGpldCBkZXN0cm95ZWQhXCIpO1xyXG4gICAgICAgIHNjb3JlLmVuZW15S2lsbENvdW50Kys7XHJcbiAgICAgICAgLy8gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzY29yZVZhbHVlXCIpLmlubmVySFRNTCA9IHNjb3JlLmVuZW15S2lsbENvdW50O1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gICAgICAgICAgXCJzY29yZVZhbHVlXCJcclxuICAgICAgICApLmlubmVyVGV4dCA9IGBTY29yZTogJHtzY29yZS5lbmVteUtpbGxDb3VudH1gO1xyXG5cclxuICAgICAgICBwbGF5ZXIudXBncmFkZVdlYXBvbigpO1xyXG5cclxuICAgICAgICAvLyBSZW1vdmUgdGhlIGRlc3Ryb3llZCBlbmVteSBqZXQgZnJvbSB0aGUgYXJyYXlcclxuICAgICAgICBlbmVteUpldHMuc3BsaWNlKGksIDEpO1xyXG5cclxuICAgICAgICAvLyBSZW1vdmUgdGhlIGVuZW15IGpldCBzcHJpdGVcclxuICAgICAgICBhcHAuc3RhZ2UucmVtb3ZlQ2hpbGQoZW5lbXlKZXQuc3ByaXRlKTtcclxuICAgICAgICBjbGVhckludGVydmFsKGVuZW15SmV0LmJ1bGxldEludGVydmFsKTtcclxuICAgICAgICAvLyBBZGQgZXhwbG9zaW9uIGFuaW1hdGlvblxyXG4gICAgICAgIGNvbnN0IHNwcml0ZVNoZWV0ID0gUElYSS5UZXh0dXJlLmZyb20oXHJcbiAgICAgICAgICBcIi4vc3JjL2Fzc2V0cy9lbmVteUV4cGxvc2lvbi5wbmdcIlxyXG4gICAgICAgICk7XHJcbiAgICAgICAgY29uc3QgZnJhbWVXaWR0aCA9IDE5MjtcclxuICAgICAgICBjb25zdCBmcmFtZUhlaWdodCA9IDE5MjtcclxuICAgICAgICBjb25zdCBudW1Sb3dzID0gNDtcclxuICAgICAgICBjb25zdCBudW1Db2xzID0gNTtcclxuICAgICAgICBjb25zdCBleHBsb3Npb25UZXh0dXJlcyA9IFtdO1xyXG5cclxuICAgICAgICBmb3IgKGxldCByb3cgPSAwOyByb3cgPCBudW1Sb3dzOyByb3crKykge1xyXG4gICAgICAgICAgZm9yIChsZXQgY29sID0gMDsgY29sIDwgbnVtQ29sczsgY29sKyspIHtcclxuICAgICAgICAgICAgY29uc3QgZnJhbWVUZXh0dXJlID0gbmV3IFBJWEkuVGV4dHVyZShcclxuICAgICAgICAgICAgICBzcHJpdGVTaGVldCxcclxuICAgICAgICAgICAgICBuZXcgUElYSS5SZWN0YW5nbGUoXHJcbiAgICAgICAgICAgICAgICBjb2wgKiBmcmFtZVdpZHRoLFxyXG4gICAgICAgICAgICAgICAgcm93ICogZnJhbWVIZWlnaHQsXHJcbiAgICAgICAgICAgICAgICBmcmFtZVdpZHRoLFxyXG4gICAgICAgICAgICAgICAgZnJhbWVIZWlnaHRcclxuICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIGV4cGxvc2lvblRleHR1cmVzLnB1c2goZnJhbWVUZXh0dXJlKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGV4cGxvc2lvblNwcml0ZSA9IG5ldyBQSVhJLkFuaW1hdGVkU3ByaXRlKGV4cGxvc2lvblRleHR1cmVzKTtcclxuICAgICAgICBleHBsb3Npb25TcHJpdGUuYW5jaG9yLnNldCgwLjUpO1xyXG4gICAgICAgIGV4cGxvc2lvblNwcml0ZS5sb29wID0gdHJ1ZTtcclxuICAgICAgICBleHBsb3Npb25TcHJpdGUuYW5pbWF0aW9uU3BlZWQgPSAwLjE7XHJcbiAgICAgICAgZXhwbG9zaW9uU3ByaXRlLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIGV4cGxvc2lvblNwcml0ZS5wb3NpdGlvbi5zZXQoZW5lbXlKZXQuc3ByaXRlLngsIGVuZW15SmV0LnNwcml0ZS55KTtcclxuICAgICAgICBhcHAuc3RhZ2UuYWRkQ2hpbGQoZXhwbG9zaW9uU3ByaXRlKTtcclxuICAgICAgICBleHBsb3Npb25TcHJpdGUucGxheSgpO1xyXG5cclxuICAgICAgICAvLyBSZW1vdmUgZXhwbG9zaW9uIGFuaW1hdGlvbiBhZnRlciAxIHNlY29uZFxyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgYXBwLnN0YWdlLnJlbW92ZUNoaWxkKGV4cGxvc2lvblNwcml0ZSk7XHJcbiAgICAgICAgfSwgMTAwMCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChlbmVteUpldC5jaGVja0JvdW5kcygpKSB7XHJcbiAgICAgICAgYXBwLnN0YWdlLnJlbW92ZUNoaWxkKGVuZW15SmV0LnNwcml0ZSk7XHJcbiAgICAgICAgZW5lbXlKZXRzLnNwbGljZShpLCAxKTsgLy8gUmVtb3ZlIHRoZSBlbmVteSBqZXQgZnJvbSB0aGUgZW5lbXlKZXRzIGFycmF5XHJcbiAgICAgICAgY2xlYXJJbnRlcnZhbChlbmVteUpldC5idWxsZXRJbnRlcnZhbCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHBsYXllckNvbGxpZGVkID0gcGxheWVyLmNoZWNrQ29sbGlzaW9ucyhlbmVteUJ1bGxldHMpO1xyXG5cclxuICAgIGlmIChwbGF5ZXJDb2xsaWRlZCkge1xyXG4gICAgICBwbGF5ZXIuZGVzdHJveWVkID0gdHJ1ZTtcclxuICAgICAgYXBwLnN0YWdlLnJlbW92ZUNoaWxkKHBsYXllci5zcHJpdGUpO1xyXG4gICAgICBjbGVhckludGVydmFsKHBsYXllci5jdXJyZW50V2VhcG9uKTtcclxuXHJcbiAgICAgIGNvbnN0IHNwcml0ZVNoZWV0ID0gUElYSS5UZXh0dXJlLmZyb20oXCIuL3NyYy9hc3NldHMvZW5lbXlFeHBsb3Npb24ucG5nXCIpO1xyXG4gICAgICBjb25zdCBmcmFtZVdpZHRoID0gMTkyO1xyXG4gICAgICBjb25zdCBmcmFtZUhlaWdodCA9IDE5MjtcclxuICAgICAgY29uc3QgbnVtUm93cyA9IDQ7XHJcbiAgICAgIGNvbnN0IG51bUNvbHMgPSA1O1xyXG4gICAgICBjb25zdCBleHBsb3Npb25UZXh0dXJlcyA9IFtdO1xyXG5cclxuICAgICAgZm9yIChsZXQgcm93ID0gMDsgcm93IDwgbnVtUm93czsgcm93KyspIHtcclxuICAgICAgICBmb3IgKGxldCBjb2wgPSAwOyBjb2wgPCBudW1Db2xzOyBjb2wrKykge1xyXG4gICAgICAgICAgY29uc3QgZnJhbWVUZXh0dXJlID0gbmV3IFBJWEkuVGV4dHVyZShcclxuICAgICAgICAgICAgc3ByaXRlU2hlZXQsXHJcbiAgICAgICAgICAgIG5ldyBQSVhJLlJlY3RhbmdsZShcclxuICAgICAgICAgICAgICBjb2wgKiBmcmFtZVdpZHRoLFxyXG4gICAgICAgICAgICAgIHJvdyAqIGZyYW1lSGVpZ2h0LFxyXG4gICAgICAgICAgICAgIGZyYW1lV2lkdGgsXHJcbiAgICAgICAgICAgICAgZnJhbWVIZWlnaHRcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgKTtcclxuICAgICAgICAgIGV4cGxvc2lvblRleHR1cmVzLnB1c2goZnJhbWVUZXh0dXJlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGNvbnN0IGV4cGxvc2lvblNwcml0ZSA9IG5ldyBQSVhJLkFuaW1hdGVkU3ByaXRlKGV4cGxvc2lvblRleHR1cmVzKTtcclxuICAgICAgZXhwbG9zaW9uU3ByaXRlLmFuY2hvci5zZXQoMC41KTtcclxuICAgICAgZXhwbG9zaW9uU3ByaXRlLmxvb3AgPSB0cnVlO1xyXG4gICAgICBleHBsb3Npb25TcHJpdGUuYW5pbWF0aW9uU3BlZWQgPSAwLjE7XHJcbiAgICAgIGV4cGxvc2lvblNwcml0ZS52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgZXhwbG9zaW9uU3ByaXRlLnBvc2l0aW9uLnNldChwbGF5ZXIuc3ByaXRlLngsIHBsYXllci5zcHJpdGUueSk7XHJcblxyXG4gICAgICBhcHAuc3RhZ2UuYWRkQ2hpbGQoZXhwbG9zaW9uU3ByaXRlKTtcclxuICAgICAgZXhwbG9zaW9uU3ByaXRlLnBsYXkoKTtcclxuXHJcbiAgICAgIC8vIFJlbW92ZSBleHBsb3Npb24gYW5pbWF0aW9uIGFmdGVyIDEgc2Vjb25kXHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGFwcC5zdGFnZS5yZW1vdmVDaGlsZChleHBsb3Npb25TcHJpdGUpO1xyXG4gICAgICB9LCAxMDAwKTtcclxuICAgICAgaWYgKHBsYXllci5ocCAhPT0gMCkge1xyXG4gICAgICAgIHBsYXllciA9IHBsYXllci5zcGF3bk5ld1BsYXllckpldCgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgKGV2ZW50KSA9PiB7XHJcbiAgaWYgKGV2ZW50LmNvZGUgPT09IFwiU3BhY2VcIikge1xyXG4gICAgaWYgKCFnYW1lU3RhcnRlZCkge1xyXG4gICAgICBnYW1lU3RhcnRlZCA9IHRydWU7XHJcbiAgICAgIHN0YXJ0R2FtZSgpO1xyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0YXJ0U2NyZWVuXCIpLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIH1cclxuICB9XHJcbn0pO1xyXG4iXSwibmFtZXMiOlsiUGxheWVySmV0IiwiRW5lbXlKZXQiLCJnYW1lU3RhcnRlZCIsInN0YXJ0R2FtZSIsImFwcCIsIlBJWEkiLCJBcHBsaWNhdGlvbiIsIndpZHRoIiwiaGVpZ2h0IiwiYmFja2dyb3VuZENvbG9yIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFwcGVuZENoaWxkIiwidmlldyIsInNldHVwIiwiYmdUZXh0dXJlcyIsIkFzc2V0cyIsImxvYWQiLCJiYXNlQmFja2dyb3VuZCIsIlNwcml0ZSIsInN0YWdlIiwiYWRkQ2hpbGQiLCJjaGFuZ2luZ0JhY2tncm91bmRzIiwiZm9yRWFjaCIsImJnIiwiaW5kZXgiLCJhbHBoYSIsImZhZGVJbiIsImN1cnJlbnRCZ0luZGV4IiwibmV4dEJnSW5kZXgiLCJ0aWNrZXIiLCJhZGQiLCJsZW5ndGgiLCJwbGF5ZXJUZXh0dXJlIiwiVGV4dHVyZSIsImZyb20iLCJwbGF5ZXJCdWxsZXRzIiwiZW5lbXlCdWxsZXRzIiwic2NvcmUiLCJlbmVteUtpbGxDb3VudCIsInBsYXllciIsImtleXMiLCJpc1BhdXNlZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwia2V5Iiwic3RhcnQiLCJzdG9wIiwiZGVzdHJveWVkIiwiaGFuZGxlS2V5Ym9hcmQiLCJzcHJpdGUiLCJlbmVteUpldFRleHR1cmUiLCJib3NzSmV0VGV4dHVyZSIsImVuZW15SmV0cyIsImJvc3NKZXQiLCJzcGF3bkVuZW15SmV0cyIsImkiLCJlbmVteUpldCIsIk1hdGgiLCJyYW5kb20iLCJwdXNoIiwic3Bhd25Cb3NzSmV0cyIsImVuZW15U3Bhd25Db3VudCIsImVuZW15Q291bnQiLCJzcGF3bkludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiY29sbGlkZWQiLCJjaGVja0NvbGxpc2lvbnMiLCJjb25zb2xlIiwibG9nIiwiaW5uZXJUZXh0IiwidXBncmFkZVdlYXBvbiIsInNwbGljZSIsInJlbW92ZUNoaWxkIiwiYnVsbGV0SW50ZXJ2YWwiLCJzcHJpdGVTaGVldCIsImZyYW1lV2lkdGgiLCJmcmFtZUhlaWdodCIsIm51bVJvd3MiLCJudW1Db2xzIiwiZXhwbG9zaW9uVGV4dHVyZXMiLCJyb3ciLCJjb2wiLCJmcmFtZVRleHR1cmUiLCJSZWN0YW5nbGUiLCJleHBsb3Npb25TcHJpdGUiLCJBbmltYXRlZFNwcml0ZSIsImFuY2hvciIsInNldCIsImxvb3AiLCJhbmltYXRpb25TcGVlZCIsInZpc2libGUiLCJwb3NpdGlvbiIsIngiLCJ5IiwicGxheSIsInNldFRpbWVvdXQiLCJjaGVja0JvdW5kcyIsInBsYXllckNvbGxpZGVkIiwiY3VycmVudFdlYXBvbiIsImhwIiwic3Bhd25OZXdQbGF5ZXJKZXQiLCJldmVudCIsImNvZGUiLCJzdHlsZSIsImRpc3BsYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/EnemyJet.js":
/*!*********************************!*\
  !*** ./src/scripts/EnemyJet.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _MovingObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MovingObject */ \"./src/scripts/MovingObject.js\");\n/* harmony import */ var _bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bullet */ \"./src/scripts/bullet.js\");\n\n\nclass EnemyJet extends _MovingObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(x, y, texture, enemyBullets, app, type, dx, dy) {\n    super(x, y, texture);\n    this.speed = 0.5;\n    this.enemyBullets = enemyBullets;\n    this.app = app;\n    this.type = type;\n    this.dx = dx;\n    this.dy = dy;\n    if (this.type === \"common\") {\n      this.hp = 1;\n    } else if (this.type === \"boss\") {\n      this.hp = 10;\n    }\n    this.bulletInterval = null;\n    this.fireBullet();\n    this.moveTicker = null;\n  }\n  fireBullet() {\n    // Create a new bullet every 0.5 seconds\n    this.bulletInterval = setInterval(() => {\n      const bulletTexture = PIXI.Texture.from(\"./src/assets/playerbullet.png\"); // Update the texture\n      const bullet = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x, this.sprite.y + this.sprite.height / 2, bulletTexture, \"down\",\n      // Add direction\n      this.app // Add app\n      );\n\n      this.app.stage.addChild(bullet.sprite);\n      this.enemyBullets.push(bullet);\n\n      // Add this block to update the enemy bullet's position\n      this.app.ticker.add(() => {\n        bullet.move(0, 1); // Update the bullet's position\n\n        // // Remove the bullet if it goes beyond the bottom edge of the screen\n      });\n    }, 2000);\n  }\n  move(dx, dy) {\n    // Remove the existing ticker function if there's any\n    if (this.moveTicker) {\n      this.app.ticker.remove(this.moveTicker);\n    }\n\n    // Create a new ticker function with the new direction\n    this.moveTicker = () => {\n      this.sprite.x += this.speed * dx;\n      this.sprite.y += this.speed * dy;\n    };\n\n    // Add the new ticker function to the app ticker\n    this.app.ticker.add(this.moveTicker);\n  }\n  checkBounds() {\n    if (this.type === \"common\") {\n      if (this.sprite.y > this.app.view.height + this.sprite.height || this.sprite.x < -this.sprite.width || this.sprite.x > this.app.view.width + this.sprite.width) {\n        return true;\n      }\n      // Move the common enemy jet\n      this.move(this.dx, this.dy);\n    } else if (this.type === \"boss\") {\n      if (this.dx < 0 && this.sprite.x <= 10 || this.dx > 0 && this.sprite.x >= this.app.view.width) {\n        this.dx *= -1;\n      }\n\n      // Move the boss enemy jet\n      this.move(this.dx, this.dy);\n    }\n  }\n  checkCollisions(bullets) {\n    const padding = 30; // Add padding to expand the range\n\n    for (let i = 0; i < bullets.length; i++) {\n      const bullet = bullets[i];\n      const expandedBounds = new PIXI.Rectangle(this.sprite.getBounds().x - padding / 2, this.sprite.getBounds().y, this.sprite.getBounds().width + padding, this.sprite.getBounds().height);\n      if (bullet.direction === \"up\" && expandedBounds.contains(bullet.sprite.x, bullet.sprite.y)) {\n        if (this.hp !== 0) {\n          this.app.stage.removeChild(bullet.sprite);\n          bullets.splice(i, 1);\n          this.hp--;\n        } else {\n          this.app.stage.removeChild(this.sprite);\n          this.app.stage.removeChild(bullet.sprite);\n          bullets.splice(i, 1); // Remove the bullet from the bullets array\n          clearInterval(this.bulletInterval);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (EnemyJet);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/EnemyJet.js\n");

/***/ }),

/***/ "./src/scripts/MovingObject.js":
/*!*************************************!*\
  !*** ./src/scripts/MovingObject.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass MovingObject {\n  constructor(x, y, texture) {\n    this.sprite = new PIXI.Sprite(texture);\n    this.sprite.anchor.set(0.5);\n    this.sprite.x = x;\n    this.sprite.y = y;\n  }\n  setPosition(x, y) {\n    this.sprite.x = x;\n    this.sprite.y = y;\n  }\n  move(dx, dy) {\n    this.sprite.x += dx;\n    this.sprite.y += dy;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MovingObject);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9Nb3ZpbmdPYmplY3QuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFlBQVksQ0FBQztFQUNqQkMsV0FBV0EsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLE9BQU8sRUFBRTtJQUN6QixJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJQyxJQUFJLENBQUNDLE1BQU0sQ0FBQ0gsT0FBTyxDQUFDO0lBQ3RDLElBQUksQ0FBQ0MsTUFBTSxDQUFDRyxNQUFNLENBQUNDLEdBQUcsQ0FBQyxHQUFHLENBQUM7SUFDM0IsSUFBSSxDQUFDSixNQUFNLENBQUNILENBQUMsR0FBR0EsQ0FBQztJQUNqQixJQUFJLENBQUNHLE1BQU0sQ0FBQ0YsQ0FBQyxHQUFHQSxDQUFDO0VBQ25CO0VBRUFPLFdBQVdBLENBQUNSLENBQUMsRUFBRUMsQ0FBQyxFQUFFO0lBQ2hCLElBQUksQ0FBQ0UsTUFBTSxDQUFDSCxDQUFDLEdBQUdBLENBQUM7SUFDakIsSUFBSSxDQUFDRyxNQUFNLENBQUNGLENBQUMsR0FBR0EsQ0FBQztFQUNuQjtFQUVBUSxJQUFJQSxDQUFDQyxFQUFFLEVBQUVDLEVBQUUsRUFBRTtJQUNYLElBQUksQ0FBQ1IsTUFBTSxDQUFDSCxDQUFDLElBQUlVLEVBQUU7SUFDbkIsSUFBSSxDQUFDUCxNQUFNLENBQUNGLENBQUMsSUFBSVUsRUFBRTtFQUNyQjtBQUNGO0FBRUEsK0RBQWViLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvc2NyaXB0cy9Nb3ZpbmdPYmplY3QuanM/ZTZlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBNb3ZpbmdPYmplY3Qge1xyXG4gIGNvbnN0cnVjdG9yKHgsIHksIHRleHR1cmUpIHtcclxuICAgIHRoaXMuc3ByaXRlID0gbmV3IFBJWEkuU3ByaXRlKHRleHR1cmUpO1xyXG4gICAgdGhpcy5zcHJpdGUuYW5jaG9yLnNldCgwLjUpO1xyXG4gICAgdGhpcy5zcHJpdGUueCA9IHg7XHJcbiAgICB0aGlzLnNwcml0ZS55ID0geTtcclxuICB9XHJcblxyXG4gIHNldFBvc2l0aW9uKHgsIHkpIHtcclxuICAgIHRoaXMuc3ByaXRlLnggPSB4O1xyXG4gICAgdGhpcy5zcHJpdGUueSA9IHk7XHJcbiAgfVxyXG5cclxuICBtb3ZlKGR4LCBkeSkge1xyXG4gICAgdGhpcy5zcHJpdGUueCArPSBkeDtcclxuICAgIHRoaXMuc3ByaXRlLnkgKz0gZHk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNb3ZpbmdPYmplY3Q7XHJcbiJdLCJuYW1lcyI6WyJNb3ZpbmdPYmplY3QiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwidGV4dHVyZSIsInNwcml0ZSIsIlBJWEkiLCJTcHJpdGUiLCJhbmNob3IiLCJzZXQiLCJzZXRQb3NpdGlvbiIsIm1vdmUiLCJkeCIsImR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/MovingObject.js\n");

/***/ }),

/***/ "./src/scripts/PlayerJet.js":
/*!**********************************!*\
  !*** ./src/scripts/PlayerJet.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _MovingObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MovingObject */ \"./src/scripts/MovingObject.js\");\n/* harmony import */ var _bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bullet */ \"./src/scripts/bullet.js\");\n\n\nclass PlayerJet extends _MovingObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(app, x, y, texture, playerBullets, score, hp) {\n    super(x, y, texture);\n    this.speed = 5;\n    this.app = app;\n    this.destroyed = false;\n    this.score = score;\n    this.playerBullets = playerBullets;\n    this.weaponLevel = 1; // default weapon level is 1\n    this.currentWeapon = null;\n    this.hp = hp;\n    this.invulnerable = false;\n    this.invulnerableDuration = 3000; // 3 seconds of invulnerability\n    this.blinkDuration = 200; // 200 milliseconds per blink\n    this.blinkInterval = null;\n    this.upgradeWeapon();\n    this.fireBullet();\n    this.hpElement = document.getElementById(\"hp\");\n    this.updateHP();\n  }\n  fireBullet() {\n    this.app.ticker.add(() => {\n      for (let i = this.playerBullets.length - 1; i >= 0; i--) {\n        const bullet = this.playerBullets[i];\n        if (bullet.type === \"top-left\") {\n          bullet.move(-3, -10);\n        } else if (bullet.type === \"top-right\") {\n          bullet.move(3, -10);\n        } else {\n          bullet.move(0, -10);\n        }\n        bullet.checkBounds(this.app);\n        if (bullet.sprite.y < -bullet.sprite.height || bullet.destroyed) {\n          // Remove the bullet if it goes beyond the top edge of the screen or is destroyed\n          this.app.stage.removeChild(bullet.sprite);\n          this.playerBullets.splice(i, 1);\n        }\n      }\n    });\n  }\n  updateHP() {\n    this.hpElement.innerText = `Life Token: ${this.hp}`;\n  }\n  upgradeWeapon() {\n    const bulletTexture = PIXI.Texture.from(\"./src/assets/playerbullet.png\");\n\n    // Create a new bullet every second\n    if (this.score.enemyKillCount > 5) {\n      this.weaponLevel++;\n      clearInterval(this.currentWeapon);\n      this.currentWeapon = setInterval(() => {\n        const bullet1 = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x - this.sprite.width / 3, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\", this.app, \"top-left\");\n        const bullet2 = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\", this.app, \"straight-top\");\n        const bullet3 = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x + this.sprite.width / 3, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\", this.app, \"top-right\");\n        this.app.stage.addChild(bullet1.sprite, bullet2.sprite, bullet3.sprite);\n        this.playerBullets.push(bullet1, bullet2, bullet3);\n      }, 700);\n    } else if (this.score.enemyKillCount > 3) {\n      this.weaponLevel++;\n      clearInterval(this.currentWeapon);\n      this.currentWeapon = setInterval(() => {\n        const bullet = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x + this.sprite.width / 3, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\");\n        const bullet2 = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x - this.sprite.width / 3, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\");\n        this.app.stage.addChild(bullet.sprite, bullet2.sprite);\n        this.playerBullets.push(bullet, bullet2);\n      }, 700);\n    } else if (this.score.enemyKillCount > 1) {\n      this.weaponLevel++;\n      clearInterval(this.currentWeapon);\n      this.currentWeapon = setInterval(() => {\n        const bullet = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\");\n        this.app.stage.addChild(bullet.sprite);\n        this.playerBullets.push(bullet);\n      }, 700);\n    } else {\n      clearInterval(this.currentWeapon);\n      this.currentWeapon = setInterval(() => {\n        const bullet = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\");\n        this.app.stage.addChild(bullet.sprite);\n        this.playerBullets.push(bullet);\n      }, 1000);\n    }\n\n    // Update the weapon level based on the score\n    if (this.score.enemyKillCount > 5) {\n      this.weaponLevel = 4;\n    } else if (this.score.enemyKillCount > 3) {\n      this.weaponLevel = 3;\n    } else if (this.score.enemyKillCount > 1) {\n      this.weaponLevel = 2;\n    } else {\n      this.weaponLevel = 1;\n    }\n\n    // Update the HUD element if the weapon level has changed\n\n    document.getElementById(\"weapon-level\").innerText = `Current Weapon: ${this.weaponLevel}`;\n  }\n  handleKeyboard(keys) {\n    if ((keys[\"w\"] || keys[\"W\"]) && this.sprite.y - this.speed > 0) {\n      this.move(0, -this.speed);\n    }\n    if ((keys[\"s\"] || keys[\"S\"]) && this.sprite.y + this.speed < this.app.view.height) {\n      this.move(0, this.speed);\n    }\n    if ((keys[\"a\"] || keys[\"A\"]) && this.sprite.x - this.speed > 0) {\n      this.move(-this.speed, 0);\n    }\n    if ((keys[\"d\"] || keys[\"D\"]) && this.sprite.x + this.speed < this.app.view.width) {\n      this.move(this.speed, 0);\n    }\n  }\n  checkCollisions(bullets) {\n    const padding = 30; // Add padding to expand the range\n    if (this.destroyed || this.invulnerable === true) {\n      // If the player jet is destroyed, don't check for collisions\n      return false;\n    }\n    for (let i = 0; i < bullets.length; i++) {\n      const bullet = bullets[i];\n      const expandedBounds = new PIXI.Rectangle(this.sprite.getBounds().x - padding / 2, this.sprite.getBounds().y, this.sprite.getBounds().width + padding, this.sprite.getBounds().height);\n      if (bullet.direction === \"down\" && expandedBounds.contains(bullet.sprite.x, bullet.sprite.y)) {\n        this.app.stage.removeChild(bullet.sprite);\n        bullets.splice(i, 1);\n        return true;\n      } else if (bullet.sprite.y > this.app.view.height) {\n        this.app.stage.removeChild(bullet.sprite);\n        bullets.splice(i, 1);\n      }\n    }\n    return false;\n  }\n  spawnNewPlayerJet() {\n    this.hp--;\n    const newPlayerJet = new PlayerJet(this.app, this.app.view.width / 2, this.app.screen.height - 50, this.sprite.texture, this.playerBullets, this.score, this.hp);\n    newPlayerJet.invulnerable = true;\n    newPlayerJet.startBlinking();\n    setTimeout(() => {\n      newPlayerJet.stopBlinking();\n      newPlayerJet.invulnerable = false;\n    }, newPlayerJet.invulnerableDuration);\n    return newPlayerJet;\n  }\n  startBlinking() {\n    let isBlinkOn = false;\n    this.blinkInterval = setInterval(() => {\n      if (isBlinkOn) {\n        this.sprite.visible = true;\n        isBlinkOn = false;\n      } else {\n        this.sprite.visible = false;\n        isBlinkOn = true;\n      }\n    }, this.blinkDuration);\n  }\n  stopBlinking() {\n    clearInterval(this.blinkInterval);\n    this.sprite.visible = true;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (PlayerJet);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/PlayerJet.js\n");

/***/ }),

/***/ "./src/scripts/bullet.js":
/*!*******************************!*\
  !*** ./src/scripts/bullet.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _MovingObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MovingObject */ \"./src/scripts/MovingObject.js\");\n\nclass Bullet extends _MovingObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(x, y, texture, direction, app, type) {\n    super(x, y, texture);\n    this.speed = 10;\n    this.direction = direction; // Add direction property\n    this.app = app; // Add app property\n    this.type = type;\n  }\n  move(dx, dy) {\n    super.move(dx, dy);\n    this.checkBounds();\n  }\n\n  // Update checkBounds to use this.app\n  checkBounds() {}\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bullet);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9idWxsZXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBMEM7QUFFMUMsTUFBTUMsTUFBTSxTQUFTRCxxREFBWSxDQUFDO0VBQ2hDRSxXQUFXQSxDQUFDQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsT0FBTyxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxFQUFFO0lBQy9DLEtBQUssQ0FBQ0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLE9BQU8sQ0FBQztJQUNwQixJQUFJLENBQUNJLEtBQUssR0FBRyxFQUFFO0lBQ2YsSUFBSSxDQUFDSCxTQUFTLEdBQUdBLFNBQVMsQ0FBQyxDQUFDO0lBQzVCLElBQUksQ0FBQ0MsR0FBRyxHQUFHQSxHQUFHLENBQUMsQ0FBQztJQUNoQixJQUFJLENBQUNDLElBQUksR0FBR0EsSUFBSTtFQUNsQjtFQUVBRSxJQUFJQSxDQUFDQyxFQUFFLEVBQUVDLEVBQUUsRUFBRTtJQUNYLEtBQUssQ0FBQ0YsSUFBSSxDQUFDQyxFQUFFLEVBQUVDLEVBQUUsQ0FBQztJQUNsQixJQUFJLENBQUNDLFdBQVcsQ0FBQyxDQUFDO0VBQ3BCOztFQUVBO0VBQ0FBLFdBQVdBLENBQUEsRUFBRyxDQUFDO0FBQ2pCO0FBRUEsK0RBQWVaLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvc2NyaXB0cy9idWxsZXQuanM/MzZiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW92aW5nT2JqZWN0IGZyb20gXCIuL01vdmluZ09iamVjdFwiO1xyXG5cclxuY2xhc3MgQnVsbGV0IGV4dGVuZHMgTW92aW5nT2JqZWN0IHtcclxuICBjb25zdHJ1Y3Rvcih4LCB5LCB0ZXh0dXJlLCBkaXJlY3Rpb24sIGFwcCwgdHlwZSkge1xyXG4gICAgc3VwZXIoeCwgeSwgdGV4dHVyZSk7XHJcbiAgICB0aGlzLnNwZWVkID0gMTA7XHJcbiAgICB0aGlzLmRpcmVjdGlvbiA9IGRpcmVjdGlvbjsgLy8gQWRkIGRpcmVjdGlvbiBwcm9wZXJ0eVxyXG4gICAgdGhpcy5hcHAgPSBhcHA7IC8vIEFkZCBhcHAgcHJvcGVydHlcclxuICAgIHRoaXMudHlwZSA9IHR5cGU7XHJcbiAgfVxyXG5cclxuICBtb3ZlKGR4LCBkeSkge1xyXG4gICAgc3VwZXIubW92ZShkeCwgZHkpO1xyXG4gICAgdGhpcy5jaGVja0JvdW5kcygpO1xyXG4gIH1cclxuXHJcbiAgLy8gVXBkYXRlIGNoZWNrQm91bmRzIHRvIHVzZSB0aGlzLmFwcFxyXG4gIGNoZWNrQm91bmRzKCkge31cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQnVsbGV0O1xyXG4iXSwibmFtZXMiOlsiTW92aW5nT2JqZWN0IiwiQnVsbGV0IiwiY29uc3RydWN0b3IiLCJ4IiwieSIsInRleHR1cmUiLCJkaXJlY3Rpb24iLCJhcHAiLCJ0eXBlIiwic3BlZWQiLCJtb3ZlIiwiZHgiLCJkeSIsImNoZWNrQm91bmRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/bullet.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;