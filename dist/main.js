/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_PlayerJet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/PlayerJet */ \"./src/scripts/PlayerJet.js\");\n/* harmony import */ var _scripts_EnemyJet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/EnemyJet */ \"./src/scripts/EnemyJet.js\");\n\n\nlet gameStarted = false;\nfunction startGame() {\n  const app = new PIXI.Application({\n    width: 800,\n    height: 600,\n    backgroundColor: 0x1099bb\n  });\n  //////////////////////////////create gameboard//////////////////////////////////\n  document.getElementById(\"main\").appendChild(app.view);\n  async function setup() {\n    const bgTextures = [await PIXI.Assets.load(\"./src/assets/bg1.png\"), await PIXI.Assets.load(\"./src/assets/bg2.png\"), await PIXI.Assets.load(\"./src/assets/bg3.png\")];\n    const baseBackground = new PIXI.Sprite(bgTextures[0]);\n    app.stage.addChild(baseBackground);\n    const changingBackgrounds = [new PIXI.Sprite(bgTextures[1]), new PIXI.Sprite(bgTextures[2])];\n    changingBackgrounds.forEach((bg, index) => {\n      bg.alpha = index === 0 ? 1 : 0;\n      app.stage.addChild(bg);\n    });\n    let fadeIn = true;\n    let currentBgIndex = 0;\n    let nextBgIndex = 1;\n    app.ticker.add(() => {\n      if (fadeIn) {\n        changingBackgrounds[nextBgIndex].alpha += 0.005;\n        if (changingBackgrounds[nextBgIndex].alpha >= 1) {\n          fadeIn = false;\n          currentBgIndex = (currentBgIndex + 1) % changingBackgrounds.length;\n          nextBgIndex = (currentBgIndex + 1) % changingBackgrounds.length;\n        }\n      } else {\n        changingBackgrounds[currentBgIndex].alpha -= 0.005;\n        if (changingBackgrounds[currentBgIndex].alpha <= 0) {\n          fadeIn = true;\n        }\n      }\n    });\n  }\n  setup();\n  ///////////////fading background///////////////////////\n  const playerTexture = PIXI.Texture.from(\"./src/assets/playerjet.png\");\n  const playerBullets = [];\n  const enemyBullets = [];\n  const score = {\n    enemyKillCount: 0\n  };\n  let player = new _scripts_PlayerJet__WEBPACK_IMPORTED_MODULE_0__[\"default\"](app, app.view.width / 2, app.view.height - 50, playerTexture, playerBullets, score, 10);\n  const keys = {};\n  let isPaused = false;\n  document.addEventListener(\"keydown\", e => {\n    if (e.key === \"P\" || e.key === \"p\") {\n      if (isPaused) {\n        app.ticker.start();\n      } else {\n        app.ticker.stop();\n      }\n      isPaused = !isPaused;\n    } else {\n      keys[e.key] = true;\n    }\n  });\n  document.addEventListener(\"keyup\", e => {\n    keys[e.key] = false;\n  });\n  let bossJet = null;\n  function checkGameState() {\n    console.log(bossJet);\n    if (player.hp <= 0) {\n      displayDefeatPicture();\n    } else if (bossJet) {\n      if (!bossJet.bossAlive) {\n        displayVictoryPicture();\n      }\n    }\n  }\n\n  // function displayDefeatPicture() {\n  //   let gameContainer = document.getElementById(\"main\");\n  //   gameContainer.innerHTML =\n  //     '<img src=\"./src/assets/wallpaper.png\" alt=\"Defeat\">';\n  // }\n  function displayDefeatPicture() {\n    let gameContainer = document.getElementById(\"gameContainer\");\n\n    // clear the gameContainer\n    gameContainer.innerHTML = \"\";\n\n    // create the defeat message\n    let defeatMessage = document.createElement(\"h2\");\n    defeatMessage.innerText = \"Defeat...\";\n    defeatMessage.style.textAlign = \"center\";\n\n    // create the defeat image\n    let defeatImage = document.createElement(\"img\");\n    defeatImage.src = \"./src/assets/wallpaper.png\";\n    defeatImage.alt = \"Defeat\";\n    defeatImage.style.display = \"block\";\n    defeatImage.style.margin = \"0 auto\";\n\n    // append elements to the gameContainer\n    gameContainer.appendChild(defeatMessage);\n    gameContainer.appendChild(defeatImage);\n  }\n  function displayVictoryPicture() {\n    let gameContainer = document.getElementById(\"main\");\n    gameContainer.innerHTML = '<img src=\"./src/assets/wallpaper.png\" alt=\"Victory\">';\n  }\n  ////////////////////////////to set the player can hold on to key to keep moving on the direction/////////////\n  app.ticker.add(() => {\n    if (!player.destroyed) {\n      player.handleKeyboard(keys);\n      app.stage.addChild(player.sprite);\n    }\n\n    /////////////////////////////added player jet///////////////////////////////\n  });\n  ///////////////////remove enemy jet if it got hit by player bullet//////////////\n  const enemyJetTexture = PIXI.Texture.from(\"./src/assets/jet.png\");\n  const bossJetTexture = PIXI.Texture.from(\"./src/assets/boss.png\");\n  const enemyJets = [];\n\n  // Add this function to spawn a group of 5 enemy jets\n  function spawnEnemyJets() {\n    for (let i = 0; i < 1; i++) {\n      const enemyJet = new _scripts_EnemyJet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](app.view.width, Math.random() * app.view.height / 3, enemyJetTexture, enemyBullets, app, \"common\", -1, 0);\n      enemyJets.push(enemyJet);\n      app.stage.addChild(enemyJet.sprite);\n    }\n  }\n  function spawnBossJets() {\n    bossJet = new _scripts_EnemyJet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](app.view.width, Math.random() * app.view.height / 4, bossJetTexture, enemyBullets, app, \"boss\", -1, 0);\n    app.stage.addChild(bossJet.sprite);\n    enemyJets.push(bossJet);\n  }\n  let enemySpawnCount = 0;\n  const enemyCount = 10;\n\n  // Call spawnEnemyJets function every 10 seconds\n  const spawnInterval = setInterval(() => {\n    if (enemySpawnCount < enemyCount) {\n      spawnEnemyJets();\n      enemySpawnCount++;\n    } else {\n      spawnBossJets();\n      clearInterval(spawnInterval);\n    }\n  }, 1000);\n  app.ticker.add(() => {\n    enemyJets.forEach((enemyJet, i) => {\n      const collided = enemyJet.checkCollisions(playerBullets);\n      if (collided) {\n        score.enemyKillCount++;\n        // document.getElementById(\"scoreValue\").innerHTML = score.enemyKillCount;\n        document.getElementById(\"scoreValue\").innerText = `Score: ${score.enemyKillCount}`;\n        player.upgradeWeapon();\n\n        // Remove the destroyed enemy jet from the array\n        enemyJets.splice(i, 1);\n\n        // Remove the enemy jet sprite\n        app.stage.removeChild(enemyJet.sprite);\n        clearInterval(enemyJet.bulletInterval);\n        // Add explosion animation\n        const spriteSheet = PIXI.Texture.from(\"./src/assets/enemyExplosion.png\");\n        const frameWidth = 192;\n        const frameHeight = 192;\n        const numRows = 4;\n        const numCols = 5;\n        const explosionTextures = [];\n        for (let row = 0; row < numRows; row++) {\n          for (let col = 0; col < numCols; col++) {\n            const frameTexture = new PIXI.Texture(spriteSheet, new PIXI.Rectangle(col * frameWidth, row * frameHeight, frameWidth, frameHeight));\n            explosionTextures.push(frameTexture);\n          }\n        }\n        const explosionSprite = new PIXI.AnimatedSprite(explosionTextures);\n        explosionSprite.anchor.set(0.5);\n        explosionSprite.loop = true;\n        explosionSprite.animationSpeed = 0.1;\n        explosionSprite.visible = true;\n        explosionSprite.position.set(enemyJet.sprite.x, enemyJet.sprite.y);\n        app.stage.addChild(explosionSprite);\n        explosionSprite.play();\n\n        // Remove explosion animation after 1 second\n        setTimeout(() => {\n          app.stage.removeChild(explosionSprite);\n          if (bossJet) {\n            checkGameState();\n          }\n        }, 1000);\n      }\n      if (enemyJet.checkBounds()) {\n        app.stage.removeChild(enemyJet.sprite);\n        enemyJets.splice(i, 1); // Remove the enemy jet from the enemyJets array\n        clearInterval(enemyJet.bulletInterval);\n      }\n    });\n    const playerCollided = player.checkCollisions(enemyBullets);\n    if (playerCollided) {\n      player.destroyed = true;\n      app.stage.removeChild(player.sprite);\n      clearInterval(player.currentWeapon);\n      const spriteSheet = PIXI.Texture.from(\"./src/assets/enemyExplosion.png\");\n      const frameWidth = 192;\n      const frameHeight = 192;\n      const numRows = 4;\n      const numCols = 5;\n      const explosionTextures = [];\n      for (let row = 0; row < numRows; row++) {\n        for (let col = 0; col < numCols; col++) {\n          const frameTexture = new PIXI.Texture(spriteSheet, new PIXI.Rectangle(col * frameWidth, row * frameHeight, frameWidth, frameHeight));\n          explosionTextures.push(frameTexture);\n        }\n      }\n      const explosionSprite = new PIXI.AnimatedSprite(explosionTextures);\n      explosionSprite.anchor.set(0.5);\n      explosionSprite.loop = true;\n      explosionSprite.animationSpeed = 0.1;\n      explosionSprite.visible = true;\n      explosionSprite.position.set(player.sprite.x, player.sprite.y);\n      app.stage.addChild(explosionSprite);\n      explosionSprite.play();\n\n      // Remove explosion animation after 1 second\n      setTimeout(() => {\n        app.stage.removeChild(explosionSprite);\n        checkGameState();\n      }, 1000);\n      if (player.hp !== 1) {\n        player = player.spawnNewPlayerJet();\n      }\n    }\n  });\n}\ndocument.addEventListener(\"keydown\", event => {\n  if (event.code === \"Space\") {\n    if (!gameStarted) {\n      gameStarted = true;\n      startGame();\n      document.getElementById(\"startScreen\").style.display = \"none\";\n    }\n  }\n});\n///////////////////hide startpage, start the game///////////////////////////////# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/EnemyJet.js":
/*!*********************************!*\
  !*** ./src/scripts/EnemyJet.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _MovingObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MovingObject */ \"./src/scripts/MovingObject.js\");\n/* harmony import */ var _bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bullet */ \"./src/scripts/bullet.js\");\n\n\nclass EnemyJet extends _MovingObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(x, y, texture, enemyBullets, app, type, dx, dy) {\n    super(x, y, texture);\n    this.speed = 0.5;\n    this.enemyBullets = enemyBullets;\n    this.app = app;\n    this.type = type;\n    this.dx = dx;\n    this.dy = dy;\n    this.bossAlive = true;\n    if (this.type === \"common\") {\n      this.hp = 1;\n    } else if (this.type === \"boss\") {\n      this.hp = 10;\n    }\n    this.bulletInterval = null;\n    this.fireBullet();\n    this.moveTicker = null;\n  }\n  fireBullet() {\n    // Create a new bullet every 0.5 seconds\n    this.bulletInterval = setInterval(() => {\n      const bulletTexture = PIXI.Texture.from(\"./src/assets/playerbullet.png\"); // Update the texture\n      const bullet = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x, this.sprite.y + this.sprite.height / 2, bulletTexture, \"down\",\n      // Add direction\n      this.app // Add app\n      );\n\n      this.app.stage.addChild(bullet.sprite);\n      this.enemyBullets.push(bullet);\n\n      // Add this block to update the enemy bullet's position\n      this.app.ticker.add(() => {\n        bullet.move(0, 1); // Update the bullet's position\n\n        // // Remove the bullet if it goes beyond the bottom edge of the screen\n      });\n    }, 2000);\n  }\n  move(dx, dy) {\n    // Remove the existing ticker function if there's any\n    if (this.moveTicker) {\n      this.app.ticker.remove(this.moveTicker);\n    }\n\n    // Create a new ticker function with the new direction\n    this.moveTicker = () => {\n      this.sprite.x += this.speed * dx;\n      this.sprite.y += this.speed * dy;\n    };\n\n    // Add the new ticker function to the app ticker\n    this.app.ticker.add(this.moveTicker);\n  }\n  checkBounds() {\n    if (this.type === \"common\") {\n      if (this.sprite.y > this.app.view.height + this.sprite.height || this.sprite.x < -this.sprite.width || this.sprite.x > this.app.view.width + this.sprite.width) {\n        return true;\n      }\n      // Move the common enemy jet\n      this.move(this.dx, this.dy);\n    } else if (this.type === \"boss\") {\n      if (this.dx < 0 && this.sprite.x <= 10 || this.dx > 0 && this.sprite.x >= this.app.view.width) {\n        this.dx *= -1;\n      }\n\n      // Move the boss enemy jet\n      this.move(this.dx, this.dy);\n    }\n  }\n  checkCollisions(bullets) {\n    const padding = 30; // Add padding to expand the range\n\n    for (let i = 0; i < bullets.length; i++) {\n      const bullet = bullets[i];\n      const expandedBounds = new PIXI.Rectangle(this.sprite.getBounds().x - padding / 2, this.sprite.getBounds().y, this.sprite.getBounds().width + padding, this.sprite.getBounds().height);\n      if (bullet.direction === \"up\" && expandedBounds.contains(bullet.sprite.x, bullet.sprite.y)) {\n        if (this.hp !== 0) {\n          this.app.stage.removeChild(bullet.sprite);\n          bullets.splice(i, 1);\n          this.hp--;\n        } else {\n          if (this.type === \"boss\") {\n            this.bossAlive = false;\n          }\n          this.app.stage.removeChild(this.sprite);\n          this.app.stage.removeChild(bullet.sprite);\n          bullets.splice(i, 1); // Remove the bullet from the bullets array\n          clearInterval(this.bulletInterval);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (EnemyJet);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/EnemyJet.js\n");

/***/ }),

/***/ "./src/scripts/MovingObject.js":
/*!*************************************!*\
  !*** ./src/scripts/MovingObject.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass MovingObject {\n  constructor(x, y, texture) {\n    this.sprite = new PIXI.Sprite(texture);\n    this.sprite.anchor.set(0.5);\n    this.sprite.x = x;\n    this.sprite.y = y;\n  }\n  setPosition(x, y) {\n    this.sprite.x = x;\n    this.sprite.y = y;\n  }\n  move(dx, dy) {\n    this.sprite.x += dx;\n    this.sprite.y += dy;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MovingObject);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9Nb3ZpbmdPYmplY3QuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFlBQVksQ0FBQztFQUNqQkMsV0FBV0EsQ0FBQ0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLE9BQU8sRUFBRTtJQUN6QixJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJQyxJQUFJLENBQUNDLE1BQU0sQ0FBQ0gsT0FBTyxDQUFDO0lBQ3RDLElBQUksQ0FBQ0MsTUFBTSxDQUFDRyxNQUFNLENBQUNDLEdBQUcsQ0FBQyxHQUFHLENBQUM7SUFDM0IsSUFBSSxDQUFDSixNQUFNLENBQUNILENBQUMsR0FBR0EsQ0FBQztJQUNqQixJQUFJLENBQUNHLE1BQU0sQ0FBQ0YsQ0FBQyxHQUFHQSxDQUFDO0VBQ25CO0VBRUFPLFdBQVdBLENBQUNSLENBQUMsRUFBRUMsQ0FBQyxFQUFFO0lBQ2hCLElBQUksQ0FBQ0UsTUFBTSxDQUFDSCxDQUFDLEdBQUdBLENBQUM7SUFDakIsSUFBSSxDQUFDRyxNQUFNLENBQUNGLENBQUMsR0FBR0EsQ0FBQztFQUNuQjtFQUVBUSxJQUFJQSxDQUFDQyxFQUFFLEVBQUVDLEVBQUUsRUFBRTtJQUNYLElBQUksQ0FBQ1IsTUFBTSxDQUFDSCxDQUFDLElBQUlVLEVBQUU7SUFDbkIsSUFBSSxDQUFDUCxNQUFNLENBQUNGLENBQUMsSUFBSVUsRUFBRTtFQUNyQjtBQUNGO0FBRUEsK0RBQWViLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvc2NyaXB0cy9Nb3ZpbmdPYmplY3QuanM/ZTZlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBNb3ZpbmdPYmplY3Qge1xyXG4gIGNvbnN0cnVjdG9yKHgsIHksIHRleHR1cmUpIHtcclxuICAgIHRoaXMuc3ByaXRlID0gbmV3IFBJWEkuU3ByaXRlKHRleHR1cmUpO1xyXG4gICAgdGhpcy5zcHJpdGUuYW5jaG9yLnNldCgwLjUpO1xyXG4gICAgdGhpcy5zcHJpdGUueCA9IHg7XHJcbiAgICB0aGlzLnNwcml0ZS55ID0geTtcclxuICB9XHJcblxyXG4gIHNldFBvc2l0aW9uKHgsIHkpIHtcclxuICAgIHRoaXMuc3ByaXRlLnggPSB4O1xyXG4gICAgdGhpcy5zcHJpdGUueSA9IHk7XHJcbiAgfVxyXG5cclxuICBtb3ZlKGR4LCBkeSkge1xyXG4gICAgdGhpcy5zcHJpdGUueCArPSBkeDtcclxuICAgIHRoaXMuc3ByaXRlLnkgKz0gZHk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNb3ZpbmdPYmplY3Q7XHJcbiJdLCJuYW1lcyI6WyJNb3ZpbmdPYmplY3QiLCJjb25zdHJ1Y3RvciIsIngiLCJ5IiwidGV4dHVyZSIsInNwcml0ZSIsIlBJWEkiLCJTcHJpdGUiLCJhbmNob3IiLCJzZXQiLCJzZXRQb3NpdGlvbiIsIm1vdmUiLCJkeCIsImR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/MovingObject.js\n");

/***/ }),

/***/ "./src/scripts/PlayerJet.js":
/*!**********************************!*\
  !*** ./src/scripts/PlayerJet.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _MovingObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MovingObject */ \"./src/scripts/MovingObject.js\");\n/* harmony import */ var _bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bullet */ \"./src/scripts/bullet.js\");\n\n\nclass PlayerJet extends _MovingObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(app, x, y, texture, playerBullets, score, hp) {\n    super(x, y, texture);\n    this.speed = 5;\n    this.app = app;\n    this.destroyed = false;\n    this.score = score;\n    this.playerBullets = playerBullets;\n    this.weaponLevel = 1; // default weapon level is 1\n    this.currentWeapon = null;\n    this.hp = hp;\n    this.invulnerable = false;\n    this.invulnerableDuration = 3000; // 3 seconds of invulnerability\n    this.blinkDuration = 200; // 200 milliseconds per blink\n    this.blinkInterval = null;\n    this.upgradeWeapon();\n    this.fireBullet();\n    this.hpElement = document.getElementById(\"hp\");\n    this.updateHP();\n  }\n  fireBullet() {\n    this.app.ticker.add(() => {\n      for (let i = this.playerBullets.length - 1; i >= 0; i--) {\n        const bullet = this.playerBullets[i];\n        if (bullet.type === \"top-left\") {\n          bullet.move(-3, -10);\n        } else if (bullet.type === \"top-right\") {\n          bullet.move(3, -10);\n        } else {\n          bullet.move(0, -10);\n        }\n        bullet.checkBounds(this.app);\n        if (bullet.sprite.y < -bullet.sprite.height || bullet.destroyed) {\n          // Remove the bullet if it goes beyond the top edge of the screen or is destroyed\n          this.app.stage.removeChild(bullet.sprite);\n          this.playerBullets.splice(i, 1);\n        }\n      }\n    });\n  }\n  updateHP() {\n    this.hpElement.innerText = `Life Token: ${this.hp}`;\n  }\n  upgradeWeapon() {\n    const bulletTexture = PIXI.Texture.from(\"./src/assets/playerbullet.png\");\n\n    // Create a new bullet every second\n    if (this.score.enemyKillCount > 5) {\n      this.weaponLevel++;\n      clearInterval(this.currentWeapon);\n      this.currentWeapon = setInterval(() => {\n        const bullet1 = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x - this.sprite.width / 3, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\", this.app, \"top-left\");\n        const bullet2 = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\", this.app, \"straight-top\");\n        const bullet3 = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x + this.sprite.width / 3, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\", this.app, \"top-right\");\n        this.app.stage.addChild(bullet1.sprite, bullet2.sprite, bullet3.sprite);\n        this.playerBullets.push(bullet1, bullet2, bullet3);\n      }, 700);\n    } else if (this.score.enemyKillCount > 3) {\n      this.weaponLevel++;\n      clearInterval(this.currentWeapon);\n      this.currentWeapon = setInterval(() => {\n        const bullet = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x + this.sprite.width / 3, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\");\n        const bullet2 = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x - this.sprite.width / 3, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\");\n        this.app.stage.addChild(bullet.sprite, bullet2.sprite);\n        this.playerBullets.push(bullet, bullet2);\n      }, 700);\n    } else if (this.score.enemyKillCount > 1) {\n      this.weaponLevel++;\n      clearInterval(this.currentWeapon);\n      this.currentWeapon = setInterval(() => {\n        const bullet = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\");\n        this.app.stage.addChild(bullet.sprite);\n        this.playerBullets.push(bullet);\n      }, 700);\n    } else {\n      clearInterval(this.currentWeapon);\n      this.currentWeapon = setInterval(() => {\n        const bullet = new _bullet__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.sprite.x, this.sprite.y - this.sprite.height / 2, bulletTexture, \"up\");\n        this.app.stage.addChild(bullet.sprite);\n        this.playerBullets.push(bullet);\n      }, 1000);\n    }\n\n    // Update the weapon level based on the score\n    if (this.score.enemyKillCount > 5) {\n      this.weaponLevel = 4;\n    } else if (this.score.enemyKillCount > 3) {\n      this.weaponLevel = 3;\n    } else if (this.score.enemyKillCount > 1) {\n      this.weaponLevel = 2;\n    } else {\n      this.weaponLevel = 1;\n    }\n\n    // Update the HUD element if the weapon level has changed\n\n    document.getElementById(\"weapon-level\").innerText = `Current Weapon: ${this.weaponLevel}`;\n  }\n  handleKeyboard(keys) {\n    if ((keys[\"w\"] || keys[\"W\"]) && this.sprite.y - this.speed > 0) {\n      this.move(0, -this.speed);\n    }\n    if ((keys[\"s\"] || keys[\"S\"]) && this.sprite.y + this.speed < this.app.view.height) {\n      this.move(0, this.speed);\n    }\n    if ((keys[\"a\"] || keys[\"A\"]) && this.sprite.x - this.speed > 0) {\n      this.move(-this.speed, 0);\n    }\n    if ((keys[\"d\"] || keys[\"D\"]) && this.sprite.x + this.speed < this.app.view.width) {\n      this.move(this.speed, 0);\n    }\n  }\n  checkCollisions(bullets) {\n    const padding = 30; // Add padding to expand the range\n    if (this.destroyed || this.invulnerable === true) {\n      // If the player jet is destroyed, don't check for collisions\n      return false;\n    }\n    for (let i = 0; i < bullets.length; i++) {\n      const bullet = bullets[i];\n      const expandedBounds = new PIXI.Rectangle(this.sprite.getBounds().x - padding / 2, this.sprite.getBounds().y, this.sprite.getBounds().width + padding, this.sprite.getBounds().height);\n      if (bullet.direction === \"down\" && expandedBounds.contains(bullet.sprite.x, bullet.sprite.y)) {\n        this.app.stage.removeChild(bullet.sprite);\n        bullets.splice(i, 1);\n        return true;\n      } else if (bullet.sprite.y > this.app.view.height) {\n        this.app.stage.removeChild(bullet.sprite);\n        bullets.splice(i, 1);\n      }\n    }\n    return false;\n  }\n  spawnNewPlayerJet() {\n    this.hp--;\n    const newPlayerJet = new PlayerJet(this.app, this.app.view.width / 2, this.app.screen.height - 50, this.sprite.texture, this.playerBullets, this.score, this.hp);\n    newPlayerJet.invulnerable = true;\n    newPlayerJet.startBlinking();\n    setTimeout(() => {\n      newPlayerJet.stopBlinking();\n      newPlayerJet.invulnerable = false;\n    }, newPlayerJet.invulnerableDuration);\n    return newPlayerJet;\n  }\n  startBlinking() {\n    let isBlinkOn = false;\n    this.blinkInterval = setInterval(() => {\n      if (isBlinkOn) {\n        this.sprite.visible = true;\n        isBlinkOn = false;\n      } else {\n        this.sprite.visible = false;\n        isBlinkOn = true;\n      }\n    }, this.blinkDuration);\n  }\n  stopBlinking() {\n    clearInterval(this.blinkInterval);\n    this.sprite.visible = true;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (PlayerJet);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/PlayerJet.js\n");

/***/ }),

/***/ "./src/scripts/bullet.js":
/*!*******************************!*\
  !*** ./src/scripts/bullet.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _MovingObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MovingObject */ \"./src/scripts/MovingObject.js\");\n\nclass Bullet extends _MovingObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(x, y, texture, direction, app, type) {\n    super(x, y, texture);\n    this.speed = 10;\n    this.direction = direction; // Add direction property\n    this.app = app; // Add app property\n    this.type = type;\n  }\n  move(dx, dy) {\n    super.move(dx, dy);\n    this.checkBounds();\n  }\n\n  // Update checkBounds to use this.app\n  checkBounds() {}\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Bullet);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9idWxsZXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBMEM7QUFFMUMsTUFBTUMsTUFBTSxTQUFTRCxxREFBWSxDQUFDO0VBQ2hDRSxXQUFXQSxDQUFDQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsT0FBTyxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxFQUFFO0lBQy9DLEtBQUssQ0FBQ0wsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLE9BQU8sQ0FBQztJQUNwQixJQUFJLENBQUNJLEtBQUssR0FBRyxFQUFFO0lBQ2YsSUFBSSxDQUFDSCxTQUFTLEdBQUdBLFNBQVMsQ0FBQyxDQUFDO0lBQzVCLElBQUksQ0FBQ0MsR0FBRyxHQUFHQSxHQUFHLENBQUMsQ0FBQztJQUNoQixJQUFJLENBQUNDLElBQUksR0FBR0EsSUFBSTtFQUNsQjtFQUVBRSxJQUFJQSxDQUFDQyxFQUFFLEVBQUVDLEVBQUUsRUFBRTtJQUNYLEtBQUssQ0FBQ0YsSUFBSSxDQUFDQyxFQUFFLEVBQUVDLEVBQUUsQ0FBQztJQUNsQixJQUFJLENBQUNDLFdBQVcsQ0FBQyxDQUFDO0VBQ3BCOztFQUVBO0VBQ0FBLFdBQVdBLENBQUEsRUFBRyxDQUFDO0FBQ2pCO0FBRUEsK0RBQWVaLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvc2NyaXB0cy9idWxsZXQuanM/MzZiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW92aW5nT2JqZWN0IGZyb20gXCIuL01vdmluZ09iamVjdFwiO1xyXG5cclxuY2xhc3MgQnVsbGV0IGV4dGVuZHMgTW92aW5nT2JqZWN0IHtcclxuICBjb25zdHJ1Y3Rvcih4LCB5LCB0ZXh0dXJlLCBkaXJlY3Rpb24sIGFwcCwgdHlwZSkge1xyXG4gICAgc3VwZXIoeCwgeSwgdGV4dHVyZSk7XHJcbiAgICB0aGlzLnNwZWVkID0gMTA7XHJcbiAgICB0aGlzLmRpcmVjdGlvbiA9IGRpcmVjdGlvbjsgLy8gQWRkIGRpcmVjdGlvbiBwcm9wZXJ0eVxyXG4gICAgdGhpcy5hcHAgPSBhcHA7IC8vIEFkZCBhcHAgcHJvcGVydHlcclxuICAgIHRoaXMudHlwZSA9IHR5cGU7XHJcbiAgfVxyXG5cclxuICBtb3ZlKGR4LCBkeSkge1xyXG4gICAgc3VwZXIubW92ZShkeCwgZHkpO1xyXG4gICAgdGhpcy5jaGVja0JvdW5kcygpO1xyXG4gIH1cclxuXHJcbiAgLy8gVXBkYXRlIGNoZWNrQm91bmRzIHRvIHVzZSB0aGlzLmFwcFxyXG4gIGNoZWNrQm91bmRzKCkge31cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQnVsbGV0O1xyXG4iXSwibmFtZXMiOlsiTW92aW5nT2JqZWN0IiwiQnVsbGV0IiwiY29uc3RydWN0b3IiLCJ4IiwieSIsInRleHR1cmUiLCJkaXJlY3Rpb24iLCJhcHAiLCJ0eXBlIiwic3BlZWQiLCJtb3ZlIiwiZHgiLCJkeSIsImNoZWNrQm91bmRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/bullet.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3Byb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;